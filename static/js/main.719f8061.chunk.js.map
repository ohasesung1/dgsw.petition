{"version":3,"sources":["components/Sign/SignTemplate/SignTemplate.js","components/Sign/SignInTemplate/SignInTemplate.js","lib/HookState/GroupingState.js","containers/Sign/SignIn/SignInContainer.js","components/Sign/SignUpTemplate/SignUpTemplate.js","containers/Sign/SignUp/SignUpContainer.js","containers/Sign/SignContainer.js","pages/Sign.js","lib/Token/TokenVerification.js","components/Common/NevBar/NevBar.js","components/Common/Footer/Footer.js","components/Common/PageTemplate/PageTemplate.js","components/Petition/PetitionTemplate/PetitionTemplate.js","components/Petition/PetitionItem/PetitionItem.js","components/Petition/IndexItem/IndexItem.js","lib/HookState/usePending.js","containers/Petition/Petition.js","pages/Petition.js","components/PetitionWrite/PetitionWriteTemplate/PetitionWriteTemplate.js","containers/PetitionWriteContainer/PetitionWriteContainer.js","pages/PetitionWrite.js","components/Admin/AdminTemplate/AdminTemplate.js","components/Admin/AdminItem/AdminItem.js","containers/Admin/AdminContainer.js","pages/Admin.js","components/PetitionDetail/PetitionCommentItem/PetitionCommentItem.js","components/PetitionDetail/PetitionDetailTemplate/PetitionDetailTemplate.js","components/PetitionDetail/SideAllowedPetitionItem/SideAllowedPetitionItem.js","containers/PetitionDetailContainer/PetitionDetailContainer.js","pages/PetitionDetail.js","components/StudentCouncil/StudentCouncilTemplate/StudentCouncilTemplate.js","lib/HookState/useStore.js","containers/StudentCouncil/StudentCouncil.js","pages/StudentCouncil.js","components/Common/Button/Button.js","components/Common/Modal/Modal.js","styles/typography/typography_scheme.js","containers/Common/Modal/Modal.js","components/App.js","stores/sign/signRepository.js","stores/sign/signStore.js","stores/dialog/dialogStore.js","stores/petition/petitionRepository.js","stores/petition/petitionStore.js","stores/admin/AdminRepository.js","stores/admin/AdminStore.js","stores/index.js","Root.js","serviceWorker.js","index.js","assets/image/dgsw_logo.png","assets/image/backgroundImage2.jpg","assets/image/schoolImage.jpg"],"names":["cx","classnames","bind","style","SignTemplate","children","className","SignInTemplate","idObj","pwObj","userSignIn","isSesstionObj","guestLogin","setIsSignUp","setIsLogin","isSesstion","id","setId","pw","setPw","setIsSesstion","type","value","onClick","GroupingState","name","hookS","setHookS","nameSet","charAt","toUpperCase","slice","objData","Object","inject","observer","withRouter","store","history","handleSignIn","sign","modal","dialog","useState","a","localStorage","removeItem","sessionStorage","SecureLS","encodingType","removeAll","push","length","title","stateType","contents","data","sha512","then","response","setItem","tokenData","set","member","catch","error","status","classNames","SignUpTemplate","gradeObj","numberObj","studentClassObj","idCheck","checkPwObj","nameObj","handleSignUpFunc","grade","setGrade","setNumber","number","studentClass","setStudentClass","checkPw","setCheckPw","setName","onChange","e","target","replace","handleStduentNumber","handleSignUp","handelCheckId","isCheckId","setIsCheckId","test","isLogin","Sign","TokenVerification","isToken","getItem","url","isBackground","token","userInfo","get","handleUrl","propUrl","accessLevel","location","pathname","useEffect","src","dgswLogo","Footer","setIsBackground","isFooter","setIsFooter","imageBackground","PetitionTemplate","allowedPetitionsItem","categoryPetitionsItem","allowedPetitionIndexItemList","categoryPetitionsIndexItemList","category","handleCategory","handlePetitionType","handleSearchPetition","handleSearchCategoryPetition","setTitle","categoryTitle","setCategoryTitle","placeholder","onKeyPress","key","handleKeypressForTypePetition","handleKeyPressForCategory","item","isStudent","joinDate","voteCount","idx","blind","isBlind","setIsBlind","handlePetitionDetail","joinDateFormat","moment","format","IndexItem","index","itemIndex","handlePage","usePending","requestFunction","isPending","togglePending","petitionStore","getPetitionFeed","getPetitionFeedByCategory","categoryPetitions","allowedPetitions","allowedPetitionTotalPage","handleAllowedPage","categoryPetitionTotalPage","handleAllPage","searchPetition","searchCategoryPetition","allowedPetitionPageIndex","categoryPetitionPageIndex","setCategoryPetitionsItem","setcategoryPetitionsIndexItemList","setAllowedPetitionsItem","setAllowedPetitionIndexItemList","setType","isCheckChangeCategory","setIsCheckChangeCategory","isCheckChangeType","setIsCheckChangeType","setCategory","getDataSecond","getData","categoryData","handlePetitionFeed","handlePetitionFeedSecond","window","scrollTo","map","feed","itemList","i","typeData","Petition","titleObj","contentsObj","categoryObj","handleWritePetition","handleContentsLegnth","handleTitleLength","setContents","goBack","writePetition","isConfirmed","setIsConfirmed","isUploadPetition","setIsUploadPetition","navigate","path","event","handleBlockedNavigation","nextLocation","modalType","confirmFunc","closeFunc","func","willMount","useRef","current","useComponentDidMount","useComponentWillMount","onbeforeunload","undefined","when","message","PetitionWrite","AdminTemplate","memberList","handleSearchMember","searchWord","setSearchWord","handleKeyPress","AdminItem","addAuthToMember","deleteMemberAuth","isDeleteAuth","isSetDeleteAuth","adminStore","memberData","getOrderMember","authorizationStudent","deleteAuth","searchMember","setMemberList","handleMemberInfo","searchWordData","Admin","PetitionCommentItem","memberIdLength","PetitionDetailTemplate","detailData","adminAuth","commentContentsObj","handlePetitionDelete","handleWriteCommentFunc","handleWritePagePath","sideAllowedPetition","handleBlindPetition","handleAllowPetition","comment","isAllowed","commentContents","setCommentContents","commentArray","setCommentArray","schoolImage","width","height","loop","controls","count","getPetitionDetail","PetitionDetailData","deletePetition","allowPetition","blindPetition","writePetitionComment","setDetailData","setSideAllowedPetition","setAdminAuth","guideStr","handleSideAllowedPetition","handleWriteComment","petitionIdx","getSideAllowedPetition","handleadminAuth","PetitionDetail","StudentCouncilTemplate","petitions","handleType","studentPetitionItemIndex","useStores","React","useContext","MobXProviderContext","StudentCouncil","getStudentCouncilPetition","studentCouncilPetitions","studentCouncilPetitionsTotalpage","handleStudentCouncilPage","studentCouncilPetitionsPageIndex","setPetitions","setStudentPetitionItemIndex","typeValue","handleStudentCouncilPetition","Button","handleFunction","appearance","customStyle","edgeType","isLoading","loadingType","preventDefault","margin","fontSize","defaultProps","content","size","s1","s2","s3","s4","s5","s6","s7","navbar","Modal","isModal","confirmText","modalTitle","modalConfirmText","modalContents","confirmFunction","handleIsModal","App","exact","render","request","axios","post","SERVER","signStore","autobind","signRepository","handelSignIn","Promise","resolve","reject","console","handelSignUp","action","dialogStore","this","closeFunction","observable","page","limit","headers","delete","pageIndex","petitionRepository","petition","totalPage","getPetitionComments","petitionComment","AdminStore","AdminRepository","stores","Root","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.719f8061.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames/bind';\r\nimport style from './SignTemplate.scss';\r\n\r\nconst cx = classnames.bind(style);\r\n\r\nconst SignTemplate = ({ children }) => {\r\n  return (\r\n    <div className={cx('SignTemplate')}>\r\n      <div className={cx('SignTemplate-SignInContentBox')}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSignTemplate.propTypes = {\r\n\r\n};\r\n\r\nexport default SignTemplate;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames/bind';\r\nimport style from './SignInTemplate.scss';\r\n\r\nconst cx = classnames.bind(style);\r\n\r\nconst SignInTemplate = ({ idObj, pwObj, userSignIn, isSesstionObj, guestLogin, setIsSignUp, setIsLogin }) => {\r\n\r\n  const { id, setId } = idObj;\r\n  const { pw, setPw } = pwObj;\r\n  const { isSesstion, setIsSesstion } = isSesstionObj;\r\n\r\n  const isCheckSesstion = () => {\r\n    if (isSesstion) {\r\n      setIsSesstion(false);\r\n    } else {\r\n      setIsSesstion(true);\r\n    }\r\n  };\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      userSignIn();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={cx('SignInTemplate')}>\r\n        <div className={cx('SignInTemplate-title')}>\r\n          <span>학생회 청원 사이트</span>\r\n        </div>\r\n        <div className={cx('SignInTemplate-signInContentsBox')}>\r\n          <div className={cx('SignInTemplate-signInContentsBox-idBox')}>\r\n          </div>\r\n          <div className={cx('SignInTemplate-signInContentsBox-checkBoxDiv')}>\r\n            <span>로그인 유지</span>\r\n            <input className={cx('SignInTemplate-signInContentsBox-checkBoxDiv-checkBox')}type={'checkbox'} value={isSesstion} onClick={() => isCheckSesstion()}/>\r\n          </div>\r\n        </div>\r\n        <div className={cx('SignInTemplate-buttonBox')}>\r\n          <div className={cx('SignInTemplate-buttonBox-loginButtonBox')}>\r\n            <button className={cx('SignInTemplate-buttonBox-loginButtonBox-loginButton')} onClick={() => userSignIn()}>로그인</button>\r\n          </div>\r\n          <div className={cx('SignInTemplate-buttonBox-signUpButtonBox')}>\r\n            <button className={cx('SignInTemplate-buttonBox-signUpButtonBox-signUpButton')} onClick={() => { setIsSignUp(true); setIsLogin(false)}}>회원가입</button>\r\n          </div>\r\n        </div>\r\n        <div className={cx('SignInTemplate-guestButtonBox')}>\r\n          <button className={cx('SignInTemplate-guestButtonBox-guestButton')} onClick={() => guestLogin()}>게스트 로그인</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nSignInTemplate.propTypes = {\r\n  idObj: PropTypes.object,\r\n  pwObj: PropTypes.object,\r\n  isSesstionObj: PropTypes.object,\r\n  userSignIn: PropTypes.func,\r\n  isCheckSesstion: PropTypes.func,\r\n  guestLogin: PropTypes.func\r\n};\r\n\r\nexport default SignInTemplate;","/** name은 hookS에 들어가는 것과 이름이 무조건 같아야합니다.\n * 또한, Hooks State의 구조가 name, setName으로 되어있어야 가능한 로직입니다. */\nconst GroupingState = (name, hookS, setHookS) => {\n\n  const nameSet = 'set' + (name.charAt(0).toUpperCase() + name.slice(1));\n\n  const objData = new Object();\n\n  objData[`${name}`] = hookS;\n  objData[`${nameSet}`] = setHookS;\n\n  return objData;\n};\n\nexport default GroupingState;\n","import React, { useState } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SignInTemplate from 'components/Sign/SignInTemplate';\r\nimport GroupingState from 'lib/HookState/GroupingState';\r\nimport SecureLS from 'secure-ls';\r\nimport PropTypes from 'prop-types';\r\nimport sha512 from 'js-sha512';\r\n\r\nconst SignInContainer = ({ store, history, setIsSignUp, setIsLogin }) => {\r\n  const { handleSignIn } = store.sign;\r\n  const { modal } = store.dialog;\r\n\r\n  const [id, setId] = useState('');\r\n  const [pw, setPw] = useState('');\r\n  const [isSesstion, setIsSesstion] = useState(false);\r\n\r\n  const guestLogin = async () => {\r\n    localStorage.removeItem('petition-token');\r\n    sessionStorage.removeItem('petition-token');\r\n\r\n    const ls = new SecureLS({ encodingType: 'aes' });\r\n\r\n    ls.removeAll();\r\n    history.push('/');\r\n    return;\r\n  }\r\n  \r\n  const userSignIn = async () => {\r\n    \r\n    if (id.length === 0 || pw.length === 0) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '빈칸을 채워 주세요!'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    let data = {\r\n      id,\r\n      pw: sha512(pw)\r\n    };\r\n\r\n    await handleSignIn(data).\r\n      then(async (response) => {\r\n        if (isSesstion) {\r\n          localStorage.setItem('petition-token', response.data.tokenData);\r\n        } else {\r\n          sessionStorage.setItem('petition-token',response.data.tokenData);\r\n        }\r\n\r\n        const ls = new SecureLS({ encodingType: 'aes' }); // user info 저장\r\n        ls.set('user-info', response.data.member);  // user-info라는 이름으로 저장\r\n\r\n        history.push('/');\r\n      })\r\n      .catch(async (error) => {\r\n        const { status } = error.response;\r\n        if (status === 403) {\r\n          await modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '아이디 혹은 패스워드가 틀렸습니다.'\r\n          });\r\n    \r\n          return;\r\n        } else  if (status === 400) {\r\n          await modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '양식이 맞지 않습니다.'\r\n          });\r\n    \r\n          return;\r\n        }  else if (status === 500) {\r\n          await modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '서버 에러!'\r\n          });\r\n    \r\n          return;\r\n        }\r\n        \r\n      });\r\n  }\r\n\r\n  return (\r\n    <SignInTemplate\r\n    idObj={GroupingState('id', id, setId)}\r\n    pwObj={GroupingState('pw', pw, setPw)}\r\n    isSesstionObj={GroupingState('isSesstion', isSesstion, setIsSesstion)}\r\n    userSignIn={userSignIn}\r\n    guestLogin={guestLogin}\r\n    setIsSignUp={setIsSignUp}\r\n    setIsLogin={setIsLogin}\r\n    />\r\n  );\r\n};\r\n\r\nSignInContainer.propTypes = {\r\n  idObj: PropTypes.object,\r\n  pwObj: PropTypes.object,\r\n  isSesstionObj: PropTypes.object,\r\n  userSignIn: PropTypes.func,\r\n  guestLogin: PropTypes.func\r\n};\r\n\r\n\r\nexport default inject('store')(observer(withRouter(SignInContainer)));","import React from 'react';\r\nimport style from './SignUpTemplate.scss';\r\nimport classNames from 'classnames';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst SignUpTemplate = ({ \r\n  idObj,\r\n    pwObj,\r\n    gradeObj,\r\n    numberObj,\r\n    studentClassObj,\r\n    idCheck,\r\n    checkPwObj,\r\n    nameObj,\r\n    handleSignUpFunc,\r\n    setIsSignUp,\r\n    setIsLogin\r\n  }) => {\r\n\r\n  const { grade, setGrade } = gradeObj;\r\n  const { number, setNumber } = numberObj;\r\n  const { studentClass, setStudentClass } = studentClassObj;\r\n  const { id, setId } = idObj;\r\n  const { pw, setPw } = pwObj;\r\n  const { checkPw, setCheckPw } = checkPwObj;\r\n  const { name, setName } = nameObj;\r\n\r\n  const handleStduentNumber = (e) => {\r\n    e.target.value= e.target.value.replace(/[^0-9]/g,'');\r\n\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={cx('SignUpTemplate')}>\r\n      <div className={cx('SignUpTemplate-studentInfoDiv')}>\r\n        <span>학년</span>\r\n        <div className={cx('SignUpTemplate-studentInfoDiv-gradeDiv')}>\r\n          <select  className={cx('SignUpTemplate-studentInfoDiv-gradeDiv-selectBox')} value={grade} onChange={(e) => setGrade(e.target.value)}>\r\n            <option value={1}>1</option>\r\n            <option value={2}>2</option>\r\n            <option value={3}>3</option>\r\n          </select>\r\n        </div>\r\n        <span>학반</span>\r\n        <div className={cx('SignUpTemplate-studentInfoDiv-studentClassDiv')}>\r\n          <select  className={cx('SignUpTemplate-studentInfoDiv-studentClassDiv-selectBox')} value={studentClass} onChange={(e) => setStudentClass(e.target.value)}>\r\n              <option value={1}>1</option>\r\n              <option value={2}>2</option>\r\n              <option value={3}>3</option>\r\n            </select>\r\n        </div>\r\n        <span>번호</span>\r\n        <div className={cx('SignUpTemplate-studentInfoDiv-numberDiv')}>\r\n            <input className={cx('SignUpTemplate-studentInfoDiv-numberDiv-numberInput')} type={\"text\"} onChange={(e) => { handleStduentNumber(e) }}/>\r\n        </div>\r\n      </div>\r\n      <div className={cx('SignUpTemplate-userIdDiv')}>\r\n        <div className={cx('SignUpTemplate-userIdDiv-inputDiv')}>\r\n          <input className={cx('SignUpTemplate-userIdDiv-inputDiv-input')} value={id} onChange={(e) => setId(e.target.value)}/>\r\n        </div>\r\n        <div className={cx('SignUpTemplate-userIdDiv-buttonDiv')}>\r\n          <button className={cx('SignUpTemplate-userIdDiv-buttonDiv-button')} onClick={() => idCheck()}>ID 중복 체크</button>\r\n        </div>\r\n      </div>\r\n      <div className={cx('SignUpTemplate-nameInfoDiv')}>\r\n      <span>이름</span>\r\n        <div className={cx('SignUpTemplate-nameInfoDiv-inputDiv')}>\r\n          <input className={cx('SignUpTemplate-nameInfoDiv-inputDiv-input')} value={name} onChange={(e) => setName(e.target.value)}/>\r\n        </div>\r\n      </div>\r\n      <div className={cx('SignUpTemplate-userPwDiv')}>\r\n        <div className={cx('SignUpTemplate-userPwDiv-pwDiv')}>\r\n        <span>비밀번호</span>\r\n          <div>\r\n            <input className={cx('SignUpTemplate-userPwDiv-pwDiv-input')} type={'password'} value={pw} onChange={(e) => setPw(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div  className={cx('SignUpTemplate-pwGuide')}>\r\n          <span>*비밀번호: 알파벳,숫자,특수문자 가능 7~20글자</span>\r\n        </div>\r\n        <div className={cx('SignUpTemplate-userPwDiv-checkPwDiv')}>\r\n          <span>비밀번호 확인</span>\r\n          <div>\r\n            <input className={cx('SignUpTemplate-userPwDiv-checkPwDiv-input')} type={'password'} value={checkPw} onChange={(e) => setCheckPw(e.target.value)}/>\r\n          </div>\r\n        </div>\r\n        <div className={cx('SignUpTemplate-registerButtonDiv')}>\r\n          <button className={cx('SignUpTemplate-registerButtonDiv-button')} onClick={() => {setIsLogin(true); setIsSignUp(false)}}>로그인<br/> 하러 가기</button>\r\n          <button className={cx('SignUpTemplate-registerButtonDiv-button')} onClick={() => handleSignUpFunc()}>회원 가입</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpTemplate;","import React, { useState } from 'react';\r\nimport SignUpTemplate from 'components/Sign/SignUpTemplate/SignUpTemplate';\r\nimport { inject, observer } from 'mobx-react';\r\nimport GroupingState from 'lib/HookState/GroupingState';\r\nimport sha512 from 'js-sha512';\r\n\r\nconst SignUpContainer = ({ store, setIsSignUp, setIsLogin }) => {\r\n  const { handleSignUp, handelCheckId } = store.sign;\r\n  const { modal } = store.dialog;\r\n\r\n  const [grade, setGrade] = useState(1);\r\n  const [number, setNumber] = useState(0);\r\n  const [studentClass, setStudentClass] = useState(1);\r\n\r\n  const [name ,setName] = useState('');\r\n  const [id ,setId] = useState('');\r\n  const [pw, setPw] = useState('');\r\n  const [checkPw, setCheckPw] = useState('');\r\n  const [isCheckPw, setIsCheckPw] = useState(false);\r\n  const [isCheckId, setIsCheckId] = useState(false);\r\n\r\n  const handleSignUpFunc = async () => {\r\n    if (number === 0) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '번호를 입력해주세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (id.length === 0 || pw.length === 0) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: 'ID 혹은 PW를 입력하세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (name.length === 0) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '이름을 입력하세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (!isCheckId) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: 'ID 중복 체크를 해주세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n    if (pw.length === 0 || checkPw.length === 0) {\r\n      await modal({\r\n        title: 'Error!',\r\n        stateType: 'error',\r\n        contents: '빈칸을 채워주세요.'\r\n      });\r\n\r\n      return;\r\n    } else if (pw !== checkPw) {\r\n      await modal({\r\n        title: 'Error!',\r\n        stateType: 'error',\r\n        contents: '비밀번호가 다릅니다.'\r\n      });\r\n\r\n      return;\r\n    }  else if (!(/^[a-zA-Z0-9!@#$%^*+=-]{7,20}$/).test(pw)) {\r\n      await modal({\r\n        title: 'Error!',\r\n        stateType: 'error',\r\n        contents: '비밀번호 형식을 지키세요!!'\r\n      });\r\n\r\n      return;\r\n    }\r\n    let data = {\r\n      id,\r\n      pw: sha512(pw),\r\n      name,\r\n      grade,\r\n      number,\r\n      studentClass\r\n    };\r\n\r\n    await handleSignUp(data)\r\n      .then((response) => {\r\n        modal({\r\n          title: 'Success!',\r\n          stateType: 'success',\r\n          contents: '회원가입 완료.'\r\n        });\r\n        \r\n        setIsSignUp(false);\r\n        setIsLogin(true);\r\n      })\r\n      .catch((error) => {\r\n        const { status } = error.response;\r\n        if (status === 403) {\r\n          modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '이미 가입된 회원.'\r\n          });\r\n    \r\n          return;\r\n        } else  if (status === 400) {\r\n          modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '양식이 맞지 않습니다.'\r\n          });\r\n    \r\n          return;\r\n        }  else if (status === 500) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '서버 에러!'\r\n          });\r\n    \r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  const checkNewPwForm = async () => {\r\n    if (pw.length === 0 || checkPw.length === 0) {\r\n      await modal({\r\n        title: 'Error!',\r\n        stateType: 'error',\r\n        contents: '빈칸을 채워주세요.'\r\n      });\r\n\r\n      return;\r\n    } else if (pw !== checkPw) {\r\n      await modal({\r\n        title: 'Error!',\r\n        stateType: 'error',\r\n        contents: '비밀번호가 다릅니다.'\r\n      });\r\n\r\n      return;\r\n    }  else if (!(/^[a-zA-Z0-9!@#$%^*+=-]{7,20}$/).test(pw)) {\r\n      await modal({\r\n        title: 'Error!',\r\n        stateType: 'error',\r\n        contents: '비밀번호 형식을 지키세요!!'\r\n      });\r\n\r\n      return;\r\n    }\r\n    let data = {\r\n      id,\r\n      pw: sha512(pw),\r\n      name,\r\n      grade,\r\n      number,\r\n      studentClass\r\n    };\r\n\r\n    await handleSignUp(data)\r\n      .then((response) => {\r\n        modal({\r\n          title: 'Success!',\r\n          stateType: 'success',\r\n          contents: '회원가입 완료.'\r\n        });\r\n        \r\n        setIsSignUp(false);\r\n        setIsLogin(true);\r\n      })\r\n      .catch((error) => {\r\n        const { status } = error.response;\r\n        if (status === 403) {\r\n          modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '이미 가입된 회원.'\r\n          });\r\n    \r\n          return;\r\n        } else  if (status === 400) {\r\n          modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '양식이 맞지 않습니다.'\r\n          });\r\n    \r\n          return;\r\n        }  else if (status === 500) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '서버 에러!'\r\n          });\r\n    \r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  const idCheck = async () => {\r\n    if (id.length === 0) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: 'ID를 입력하세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      id,\r\n    };\r\n\r\n    await handelCheckId(data).\r\n      then(async (response) => {\r\n        await modal({\r\n          title: 'Success',\r\n          stateType: 'success',\r\n          contents: '사용 가능한 ID입니다.'\r\n        });\r\n\r\n        setIsCheckId(true);\r\n      })\r\n      .catch(async (error) => {\r\n        const { status } = error.response;\r\n\r\n        if (status === 400) {\r\n          await modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '양식을 맞춰주세요'\r\n          });\r\n\r\n          return;\r\n        } else if (status === 403) {\r\n          await modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '이미 가입된 ID입니다.'\r\n          });\r\n    \r\n          return;\r\n        } else if (status === 500) {\r\n          await modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '서버 에러!'\r\n          });\r\n    \r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <SignUpTemplate\r\n      idObj={GroupingState('id', id, setId)}\r\n      pwObj={GroupingState('pw', pw, setPw)}\r\n      checkPwObj={GroupingState('checkPw', checkPw, setCheckPw)}\r\n      gradeObj={GroupingState('grade', grade, setGrade)}\r\n      numberObj={GroupingState('number', number, setNumber)}\r\n      studentClassObj={GroupingState('studentClass', studentClass, setStudentClass)}\r\n      nameObj={GroupingState('name', name, setName)}\r\n      idCheck={idCheck}\r\n      handleSignUpFunc={handleSignUpFunc}\r\n      setIsSignUp={setIsSignUp}\r\n      setIsLogin={setIsLogin}\r\n    />\r\n  );\r\n};\r\n\r\nexport default inject('store')(observer(SignUpContainer));\r\n\r\n","import React, { useState } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport SignTemplate from 'components/Sign/SignTemplate';\r\nimport SignInContainer from './SignIn/SignInContainer';\r\nimport SignUpContainer from './SignUp/SignUpContainer';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SignContainer = ({ store }) => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n\r\n  return (\r\n    <SignTemplate>\r\n      {\r\n        isLogin ? \r\n        <SignInContainer setIsSignUp={setIsSignUp} setIsLogin={setIsLogin}/>\r\n        : <SignUpContainer setIsSignUp={setIsSignUp} setIsLogin={setIsLogin}/>\r\n      }\r\n      \r\n    </SignTemplate>\r\n  );\r\n};\r\n\r\nSignContainer.propTypes = {\r\n\r\n};\r\n\r\n\r\nexport default inject('store')(observer(SignContainer));","import React from 'react';\r\nimport SignContainer from '../containers/Sign';\r\n\r\nconst Sign = () => {\r\n  return (\r\n    <>\r\n      <SignContainer/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sign;","/** empty는 토큰이 비어있는 것이고, sessionT는 sessionStorage에 저장한 토큰을 의미하고, localT는 localStorage에 저장한 토큰을 의미합니다.  */\n\nconst TokenVerification = () => {\n  let isToken = 'empty';\n\n  const sessionT = sessionStorage.getItem('petition-token');\n  const localT = localStorage.getItem('petition-token');\n\n  if (sessionT !== null) isToken = 'sessionT';\n  \n  if (localT !== null) isToken = 'localT';\n\n  return isToken;\n};\n\nexport default TokenVerification;\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport SecureLS from 'secure-ls';\r\nimport TokenVerification from 'lib/Token/TokenVerification';\r\nimport { inject, observer } from 'mobx-react';\r\nimport dgswLogo from 'assets/image/dgsw_logo.png';\r\nimport classNames from 'classnames/bind';\r\nimport { withRouter } from 'react-router-dom';\r\nimport style from './NevBar.scss';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst NevBar = ({ url, store, history, isBackground }) => {\r\n  const { modal } = store.dialog;\r\n  const [isLogin, setIsLogin] = useState('');\r\n\r\n  const token = TokenVerification();\r\n\r\n  const ls = new SecureLS({ encodingType: 'aes' });\r\n\r\n  const userInfo = ls.get('user-info');\r\n\r\n  const handleUrl = (propUrl) => {\r\n    if (propUrl === '/sign' && isLogin === '로그아웃') {\r\n      localStorage.removeItem('petition-token');\r\n      sessionStorage.removeItem('petition-token');\r\n\r\n      const ls = new SecureLS({ encodingType: 'aes' });\r\n\r\n      ls.removeAll();\r\n    }\r\n    if (propUrl === '/dgsw.petition/admin' && (token === 'empty' || userInfo.accessLevel === 2 || userInfo.accessLevel === 1)) {\r\n      modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '접근 권한 없음! (관리자 계정으로 다시 시도 해주세요!)'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (propUrl === '/dgsw.petition/student-council' && (token === 'empty' || userInfo.accessLevel === 2)) {\r\n      modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '접근 권한 없음! (관리자 계정으로 다시 시도 해주세요!)'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (propUrl === '/dgsw.petition/petition-write' && (token === 'empty')) {\r\n      modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '로그인 후 이용 해주세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (propUrl === history.location.pathname) {\r\n      return;\r\n    }\r\n\r\n    history.push(propUrl);\r\n  }\r\n\r\n  const checkIsLogin = () => {\r\n    if (token === 'empty') {\r\n      setIsLogin('로그인');\r\n    } else {\r\n      setIsLogin('로그아웃');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkIsLogin();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className={cx('NevBarTemplate', { 'CustomMargin': isBackground === true})}>\r\n      <div className={cx('NevBarTemplate-mainButtonDiv')} onClick={() => handleUrl('/')}>\r\n        <img className={cx('NevBarTemplate-mainButtonDiv-img')} src={dgswLogo}/>\r\n      </div>\r\n      <div className={cx('NevBarTemplate-pageButtonDiv')}>\r\n        <div className={cx('NevBarTemplate-pageButtonDiv-buttonsDiv')}>\r\n          <button className={cx('NevBarTemplate-pageButtonDiv-buttonsDiv-buttons')} onClick={() => handleUrl('/dgsw.petition/petition-write')}>청원하기</button>\r\n        </div>\r\n        <div className={cx('NevBarTemplate-pageButtonDiv-buttonsDiv')}>\r\n          <button className={cx('NevBarTemplate-pageButtonDiv-buttonsDiv-buttons')} onClick={() => handleUrl('/dgsw.petition/admin')}>관리자</button>\r\n        </div>\r\n        <div className={cx('NevBarTemplate-pageButtonDiv-buttonsDiv')}>\r\n          <button className={cx('NevBarTemplate-pageButtonDiv-buttonsDiv-buttons')} onClick={() => handleUrl('/dgsw.petition/student-council')}>학생회</button>\r\n        </div>\r\n      </div>\r\n      <div className={cx('NevBarTemplate-loginButtonDiv')}>\r\n        <button className={cx('NevBarTemplate-loginButtonDiv-buttons')} onClick={() => handleUrl('/dgsw.petition/sign')}>{isLogin}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nNevBar.propTypes = {\r\n  store: PropTypes.any,\r\n  history: PropTypes.any\r\n};\r\n\r\nexport default inject('store')(observer(withRouter(NevBar)));","import React, { useEffect } from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport classNames from 'classnames/bind';\r\nimport style from './Footer.scss';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className={cx('FooterTemplate')}>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport classNames from 'classnames/bind';\r\nimport { withRouter } from 'react-router-dom';\r\nimport NevBar from 'components/Common/NevBar';\r\nimport imageBackground from 'assets/image/backgroundImage2.jpg'; \r\nimport Footer from 'components/Common/Footer';\r\nimport style from './PageTemplate.scss';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst PageTemplate = ({ url, children }) => {\r\n\r\n  const [isBackground, setIsBackground] = useState(true);\r\n  const [isFooter, setIsFooter] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (url === '/admin') {\r\n      setIsBackground(false);\r\n      setIsFooter(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className={cx('PageTemplate')}>\r\n      {\r\n        isBackground ?\r\n        <div className={cx('PageTemplate-haederBackground')}>\r\n          <img src={imageBackground} className={cx('PageTemplate-haederBackground-image')}/>\r\n        </div>\r\n        : <></>\r\n      }\r\n      <div className={cx('PageTemplate-header')}>\r\n        <NevBar isBackground={isBackground}/>\r\n      </div>\r\n      <div className={cx('PageTemplate-contents')}>\r\n        {children}\r\n      </div>\r\n      {\r\n        isFooter ? \r\n        <div className={cx('PageTemplate-bottom')}>\r\n          <Footer/>\r\n        </div>\r\n        : <></>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nPageTemplate.propTypes = {\r\n  url: PropTypes.string,\r\n  children: PropTypes.object\r\n};\r\n\r\nexport default withRouter(PageTemplate);","import React, { useEffect, useState } from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport classNames from 'classnames/bind';\r\nimport style from './PetitionTemplate.scss';\r\nimport { FiSearch } from 'react-icons/fi';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst PetitionTemplate = ({ \r\n    allowedPetitionsItem, \r\n    categoryPetitionsItem, \r\n    allowedPetitionIndexItemList, \r\n    categoryPetitionsIndexItemList, \r\n    category,\r\n    handleCategory,\r\n    handlePetitionType,\r\n    type,\r\n    handleSearchPetition,\r\n    handleSearchCategoryPetition\r\n  }) => {\r\n    \r\n  if (category === '') {\r\n    category = '전체';\r\n  };\r\n\r\n  switch (type) {\r\n    case 'allowed':\r\n      type = '승인된';\r\n      break;\r\n    case 'not_allowed':\r\n      type = '승인 대기 중인';\r\n      break;\r\n    case 'order':\r\n      type = '최신 순';\r\n      break;\r\n    case 'vote_order':\r\n      type = '투표 순';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [categoryTitle, setCategoryTitle] = useState('');\r\n\r\n  const handleKeypressForTypePetition = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearchPetition(title);\r\n    }\r\n  };\r\n\r\n  const handleKeyPressForCategory = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearchCategoryPetition(categoryTitle);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cx('isAllowedSelectDiv')}>\r\n        <div className={cx('isAllowedSelectDiv-allowedSelectDiv', { 'isAllowedSelectDiv-allowedSelectDiv-style': type === '최신 순' })} onClick={() => handlePetitionType('order')}>\r\n          최신 순 청원 보기\r\n        </div>\r\n        <div className={cx('isAllowedSelectDiv-notAllowedSelectDiv', { 'isAllowedSelectDiv-notAllowedSelectDiv-style': type === '승인 대기 중인' })}  onClick={() => handlePetitionType('not_allowed')}>\r\n          승인 대기 중인 청원 보기\r\n        </div>\r\n        <div className={cx('isAllowedSelectDiv-allowedSelectDiv', { 'isAllowedSelectDiv-orderPetitionSelectDiv-style': type === '승인된' })}  onClick={() => handlePetitionType('allowed')}>\r\n          승인된 청원 보기\r\n        </div>\r\n        <div className={cx('isAllowedSelectDiv-orderPetitionSelectDiv', { 'isAllowedSelectDiv-orderPetitionSelectDiv-style': type === '투표 순' })}  onClick={() => handlePetitionType('vote_order')}>\r\n          투표 순 청원 보기\r\n        </div>  \r\n      </div>\r\n      <div className={cx('PetitionTemplate')}>\r\n        <div className={cx('PetitionTemplate-header')}>\r\n          <div className={cx('PetitionTemplate-header-title')}>\r\n            <span>{type} 청원 목록</span>\r\n            <div className={cx('PetitionTemplate-header-title-searchDiv')}>\r\n              {\r\n                type === '최신 순' ? \r\n                <>\r\n                    <span>청원 검색:</span>\r\n                    <input className={cx('PetitionTemplate-header-title-searchDiv-searchInput')} placeholder={'청원 제목'} value={title} onChange={(e) => { handleSearchPetition(e.target.value); setTitle(e.target.value)}} onKeyPress={(e) => handleKeypressForTypePetition(e)}/>\r\n                    <div className={cx('PetitionTemplate-header-title-searchDiv-iconDiv')} onClick={() => handleSearchPetition(title)}>\r\n                      <FiSearch className={cx('PetitionTemplate-header-title-searchDiv-iconDiv-icon')}/>\r\n                    </div>\r\n                </>\r\n                : <></>\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className={cx('PetitionTemplate-header-kinds')}>\r\n            <div className={cx('PetitionTemplate-header-kinds-category')}>\r\n              <span>분류</span>\r\n            </div>\r\n            <div className={cx('PetitionTemplate-header-kinds-title')}>\r\n              <span>제목</span>\r\n            </div>\r\n            <div className={cx('PetitionTemplate-header-kinds-date')}>\r\n              <span>청원 날짜</span>\r\n            </div>\r\n            <div className={cx('PetitionTemplate-header-kinds-voteCount')}>\r\n              <span>참여 수</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {\r\n          allowedPetitionsItem.length !== 0 ?\r\n          allowedPetitionsItem\r\n          : allowedPetitionsItem.length === 0 ?\r\n            <div className={cx('notFoundPeition')}>\r\n              청원 글이 없습니다.\r\n            </div>\r\n            :<></>\r\n        }\r\n      </div>\r\n      <div className={cx('PetitionIndexItemTemplate')}>\r\n        {allowedPetitionIndexItemList}\r\n      </div>\r\n      <div className={cx('CategoryTitile')}>\r\n        <span>* 청원 분야별 보기</span>\r\n      </div>\r\n      <div className={cx('Category')}>\r\n        <div className={cx('Category-CategoryRowOne')}>\r\n          <div className={cx('Category-CategoryRowOne-contentsDiv', {'Category-CategoryRowOne-contentsDiv-contentsStyle': category === '전체'})} onClick={() => handleCategory('')}>\r\n            <span>전체</span>\r\n          </div>\r\n          <div className={cx('Category-CategoryRowOne-contentsDiv',  {'Category-CategoryRowOne-contentsDiv-contentsStyle': category === '기숙사'})} onClick={() => handleCategory('기숙사')}>\r\n            <span>기숙사</span>\r\n          </div>\r\n          <div className={cx('Category-CategoryRowOne-contentsDiv' ,  {'Category-CategoryRowOne-contentsDiv-contentsStyle': category === '운동회'})}  onClick={() => handleCategory('운동회')}>\r\n            <span>운동회</span>\r\n          </div>\r\n          <div className={cx('Category-CategoryRowOne-contentsDiv',  {'Category-CategoryRowOne-contentsDiv-contentsStyle': category === '축제'})}  onClick={() => handleCategory('축제')}>\r\n            <span>축제</span>\r\n          </div>\r\n          <div className={cx('Category-CategoryRowOne-contentsDiv',  {'Category-CategoryRowOne-contentsDiv-contentsStyle': category === '동아리'})}  onClick={() => handleCategory('동아리')}>\r\n            <span>동아리</span>\r\n          </div>\r\n        </div>\r\n        <div className={cx('Category-CategoryRowTwo')}>\r\n          <div className={cx('Category-CategoryRowTwo-contentsDiv',  {'Category-CategoryRowTwo-contentsDiv-contentsStyle': category === '나르샤'})}  onClick={() => handleCategory('나르샤')}>\r\n            <span>나르샤</span>\r\n          </div>\r\n          <div className={cx('Category-CategoryRowTwo-contentsDiv',  {'Category-CategoryRowTwo-contentsDiv-contentsStyle': category === '강의'})}  onClick={() => handleCategory('강의')}>\r\n            <span>강의</span>\r\n          </div>\r\n          <div className={cx('Category-CategoryRowTwo-contentsDiv',  {'Category-CategoryRowTwo-contentsDiv-contentsStyle': category === '해커톤'})}  onClick={() => handleCategory('해커톤')}>\r\n            <span>해커톤</span>\r\n          </div>\r\n          <div className={cx('Category-CategoryRowTwo-contentsDiv',  {'Category-CategoryRowTwo-contentsDiv-contentsStyle': category === '급식'})}  onClick={() => handleCategory('급식')}>\r\n            <span>급식</span>\r\n          </div>\r\n          <div className={cx('Category-CategoryRowTwo-contentsDiv',  {'Category-CategoryRowTwo-contentsDiv-contentsStyle': category === '학생회'})}  onClick={() => handleCategory('학생회')}>\r\n            <span>학생회</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={cx('PetitionTemplate')}>\r\n        <div className={cx('PetitionTemplate-header')}>\r\n          <div className={cx('PetitionTemplate-header-title')}>\r\n            <span>{category} 청원 목록</span>\r\n            <div className={cx('PetitionTemplate-header-title-searchDiv')}>\r\n            {\r\n                category === '전체' ? \r\n                <>\r\n                    <span>청원 검색:</span>\r\n                    <input className={cx('PetitionTemplate-header-title-searchDiv-searchInput')} placeholder={'청원 제목'} value={categoryTitle} onChange={(e) => { handleSearchCategoryPetition(e.target.value); setCategoryTitle(e.target.value)}} onKeyPress={(e) => handleKeyPressForCategory(e)}/>\r\n                    <div className={cx('PetitionTemplate-header-title-searchDiv-iconDiv')} onClick={() => handleSearchCategoryPetition(categoryTitle)}>\r\n                      <FiSearch className={cx('PetitionTemplate-header-title-searchDiv-iconDiv-icon')}/>\r\n                    </div>\r\n                </>\r\n                : <></>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={cx('PetitionTemplate-header-kinds')}>\r\n            <div className={cx('PetitionTemplate-header-kinds-category')}>\r\n              <span>분류</span>\r\n            </div>\r\n            <div className={cx('PetitionTemplate-header-kinds-title')}>\r\n            <span>제목</span>\r\n            </div>\r\n            <div className={cx('PetitionTemplate-header-kinds-date')}>\r\n            <span>청원 날짜</span>\r\n            </div>\r\n            <div className={cx('PetitionTemplate-header-kinds-voteCount')}>\r\n            <span>참여 수</span>\r\n            </div>\r\n        </div>\r\n        {\r\n          categoryPetitionsItem.length !== 0 ?\r\n            categoryPetitionsItem\r\n            : categoryPetitionsItem.length === 0 ?\r\n              <div className={cx('notFoundPeition')}>\r\n                청원 글이 없습니다.\r\n              </div>\r\n              :<></>\r\n        }\r\n      </div>\r\n      <div className={cx('PetitionIndexItemTemplate')}>\r\n        {categoryPetitionsIndexItemList}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPetitionTemplate.propTypes = {\r\n  allowedPetitionsItem: PropTypes.array,\r\n  allPetitionsItem: PropTypes.array\r\n};\r\n\r\nexport default PetitionTemplate;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './PetitionItem.scss';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport classNames from 'classnames';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst PetitionItem = ({ item, history, isStudent }) => {\r\n  // 데이터 가져오기\r\n  let { category, joinDate, title, voteCount, idx, blind } = item;\r\n\r\n  const [isBlind, setIsBlind] = useState(false);\r\n\r\n  // 동의 댓글이 없을 경우 0 처리\r\n  if (!voteCount) {\r\n    voteCount = 0;\r\n  }\r\n\r\n  const handlePetitionDetail = async () => {\r\n    localStorage.setItem(\"petition-idx\", idx);\r\n    \r\n    history.push('/petition-detail');\r\n  };\r\n\r\n  // 데이트 포맷\r\n  const joinDateFormat = moment(joinDate).format('YYYY.MM.DD');\r\n\r\n  useEffect(() => {\r\n    if (blind === 1) {\r\n      setIsBlind(true);\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n    {\r\n      isBlind && !isStudent?\r\n      <></>\r\n      :  <div className={cx('petitionItem')} onClick={() => handlePetitionDetail(idx)}>\r\n      <div className={cx('petitionItem-category')}>\r\n        <span>{category}</span>\r\n      </div>\r\n      <div className={cx('petitionItem-title')}>\r\n        <span>{title}</span>\r\n      </div>\r\n      <div className={cx('petitionItem-date')}>\r\n        <span>{joinDateFormat}</span>\r\n      </div>\r\n      <div className={cx('petitionItem-voteCount')}>\r\n        <span>{voteCount}</span>\r\n      </div>\r\n    </div>\r\n    }\r\n    </>\r\n  )\r\n};\r\n\r\nPetitionItem.propTypes = {\r\n  item: PropTypes.object,\r\n};\r\n\r\nexport default withRouter(PetitionItem);","import React, { useEffect } from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport classNames from 'classnames/bind';\r\nimport style from './IndexItem.scss';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst IndexItem = ({ index, itemIndex, handlePage }) => {\r\n  // console.log(index, itemIndex);\r\n  \r\n  return (\r\n    <div className={cx('IndexItemTemplate', { 'IndexItemTemplate-select': index === itemIndex})} onClick={() => handlePage(index)}>\r\n      {index}\r\n    </div>\r\n  );\r\n};\r\n\r\nIndexItem.propTypes = {\r\n  index: PropTypes.number,\r\n  itemIndex: PropTypes.number,\r\n  handlePage: PropTypes.func\r\n}\r\n\r\nexport default IndexItem; ","import { useState } from 'react';\r\n\r\nconst usePending = requestFunction => {\r\n\r\n  const [isPending, togglePending] = useState(false);\r\n\r\n  const pendingFunc = async () => {\r\n    togglePending(true);\r\n\r\n    await requestFunction();\r\n\r\n    togglePending(false);\r\n  };\r\n\r\n  return [isPending, pendingFunc]\r\n};\r\n\r\nexport default usePending;","import React, { useEffect, useState } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport PetitionTemplate from 'components/Petition/PetitionTemplate';\r\nimport PetitionItem from 'components/Petition/PetitionItem';\r\nimport IndexItem from 'components/Petition/IndexItem';\r\nimport usePending from 'lib/HookState/usePending';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Petition = ({ store, history }) => {\r\n  // 서버 데이터 함수 or 변수\r\n  const { \r\n    getPetitionFeed, \r\n    getPetitionFeedByCategory,\r\n    categoryPetitions, \r\n    allowedPetitions,\r\n    allowedPetitionTotalPage,\r\n    handleAllowedPage,\r\n    categoryPetitionTotalPage,\r\n    handleAllPage,\r\n    searchPetition,\r\n    searchCategoryPetition\r\n  } = store.petitionStore;\r\n\r\n  let { allowedPetitionPageIndex, categoryPetitionPageIndex } = store.petitionStore;\r\n  \r\n  // 전체 청원 목록\r\n  const [categoryPetitionsItem, setCategoryPetitionsItem] = useState([]);\r\n  // 전체 청원 페이지네이션 인덱스 아이템 리스트\r\n  const [categoryPetitionsIndexItemList, setcategoryPetitionsIndexItemList] = useState([]);\r\n  // 승인된 청원 목록\r\n  const [allowedPetitionsItem, setAllowedPetitionsItem] = useState([]);\r\n  // 승인된 청원 페이지 네이션 인덱스 아이템 리스트\r\n  const [allowedPetitionIndexItemList, setAllowedPetitionIndexItemList] = useState([]);\r\n\r\n  // 승인, 승인 안된, 투표 순서 별 조회를 위한 변수\r\n  const [type, setType] = useState('order');\r\n\r\n  // 카테고리 변경 감지 변수\r\n  const [isCheckChangeCategory, setIsCheckChangeCategory] = useState(false);\r\n\r\n  // 타입 변경 감지 변수\r\n  const [isCheckChangeType, setIsCheckChangeType] = useState(false);\r\n\r\n  // 카테고리 변수\r\n  const [category, setCategory] = useState('');\r\n\r\n  const handleSearchCategoryPetition = async (title) => {\r\n    if (title === '') {\r\n      getDataSecond();\r\n\r\n      return;\r\n    }\r\n\r\n    await searchCategoryPetition(title, categoryPetitionPageIndex, 9)\r\n  };\r\n\r\n  // 타입별 청원 조회 용 검색 조회 함수\r\n  const handleSearchPetition = async (title) => {\r\n    if (title === '') {\r\n      getData();\r\n\r\n      return;\r\n    }\r\n    await searchPetition(title, allowedPetitionPageIndex, 9);\r\n  };\r\n\r\n  // 카테고리 변경시 저장\r\n  const handleCategory = async (categoryData) => {\r\n    setIsCheckChangeCategory(true);\r\n    await setCategory(categoryData);\r\n  };\r\n\r\n  // 청원 타입 변경시 저장\r\n  const handlePetitionType = (typeData) => {\r\n    setIsCheckChangeType(true);\r\n    setType(typeData);\r\n  };\r\n\r\n  // 승인된 청원 목록 스토어 함수 호출 \r\n  const handlePetitionFeed = async () => {\r\n    await getPetitionFeed(allowedPetitionPageIndex, 9, type);\r\n  };\r\n  // 전체 청원 목록 스토어 함수 호출 \r\n  const handlePetitionFeedSecond = async () => {\r\n    await getPetitionFeedByCategory(categoryPetitionPageIndex, 9, category);\r\n  };\r\n\r\n  // 페이지 로딩 구현\r\n  const [isLoading, getData] = usePending(handlePetitionFeed);\r\n  // 페이지 로딩 구현\r\n  const [isLoadingSecond, getDataSecond] = usePending(handlePetitionFeedSecond);\r\n\r\n  // 스토어 함수 실행\r\n  useEffect(() => {\r\n    // 타입이 변경 되었으면 pageIndex 초기화\r\n    if (isCheckChangeType) {\r\n      allowedPetitionPageIndex = 1;\r\n      getData();\r\n      setIsCheckChangeType(false);\r\n    } else {\r\n      getData();\r\n    }\r\n  }, [allowedPetitionPageIndex, type]);\r\n\r\n  // 스토어 함수 실행\r\n  useEffect(() => {\r\n    // 카테고리가 변경 되었으면 pageIndex 초기화\r\n    if (isCheckChangeCategory) {\r\n      categoryPetitionPageIndex = 1;\r\n      getDataSecond();\r\n      setIsCheckChangeCategory(false);\r\n    } else {\r\n      getDataSecond();\r\n    }\r\n  }, [categoryPetitionPageIndex, category]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  // 스토어 변수를 통해 item 저장\r\n  useEffect(() => {\r\n    setCategoryPetitionsItem(categoryPetitions.map((feed) => <PetitionItem key={feed.idx} item={feed}/>));\r\n  }, [categoryPetitions]);\r\n\r\n  // 스토어 변수를 통해 item 저장\r\n  useEffect(() => {\r\n    if (allowedPetitions) {      \r\n      setAllowedPetitionsItem(allowedPetitions.map((feed) => <PetitionItem key={feed.idx} item={feed}/>));\r\n    }\r\n  }, [allowedPetitions]);\r\n\r\n  // 승인된 청원 목록 페이지네이션 저장\r\n  useEffect(() => {\r\n      if (allowedPetitionTotalPage === 1) { // 전체 페이지 크기가 1인 경우 인덱스 1로 설정 \r\n        setAllowedPetitionIndexItemList(<IndexItem key={1} index={1} itemIndex={1} handlePage={handleAllowedPage}/>);\r\n      } else {\r\n        let itemList = []; // 전체 페이지 크기가 1보다 클 경우 인덱스를 크기 만큼 설정        \r\n        for (let i = 1; i <= allowedPetitionTotalPage; i ++) {\r\n          itemList.push(<IndexItem key={i} index={i} itemIndex={allowedPetitionPageIndex} handlePage={handleAllowedPage}/>)\r\n        }\r\n\r\n        if (allowedPetitionTotalPage < allowedPetitionPageIndex) {\r\n          itemList = [];\r\n          \r\n          allowedPetitionPageIndex = 1;\r\n\r\n          for (let i = 1; i <= allowedPetitionTotalPage; i ++) {\r\n            itemList.push(<IndexItem key={i} index={i} itemIndex={allowedPetitionPageIndex} handlePage={handleAllowedPage}/>)\r\n          }\r\n        }\r\n\r\n        setAllowedPetitionIndexItemList(itemList);\r\n      }\r\n  }, [allowedPetitionTotalPage, allowedPetitionPageIndex]);\r\n\r\n  // 카테고리 별 청원 목록 페이지네이션 저장 \r\n  useEffect(() => {\r\n    if (categoryPetitionTotalPage === 1) {\r\n      setcategoryPetitionsIndexItemList(<IndexItem key={1} index={1} itemIndex={1} handlePage={handleAllPage}/>);\r\n    } else {\r\n      let itemList = [];\r\n      for (let i = 1; i <= categoryPetitionTotalPage; i ++) {\r\n        itemList.push(<IndexItem key={i} index={i} itemIndex={categoryPetitionPageIndex} handlePage={handleAllPage}/>)\r\n      }\r\n\r\n      if (categoryPetitionTotalPage < categoryPetitionPageIndex) {\r\n        itemList = [];\r\n        \r\n        categoryPetitionPageIndex = 1;\r\n\r\n        for (let i = 1; i <= allowedPetitionTotalPage; i ++) {\r\n          itemList.push(<IndexItem key={i} index={i} itemIndex={categoryPetitionPageIndex} handlePage={handleAllPage}/>)\r\n        }\r\n      }\r\n      setcategoryPetitionsIndexItemList(itemList);\r\n    }\r\n}, [categoryPetitionTotalPage, categoryPetitionPageIndex]);\r\n\r\n  return (\r\n    <PetitionTemplate\r\n      allowedPetitionsItem={allowedPetitionsItem}\r\n      categoryPetitionsItem={categoryPetitionsItem}\r\n      allowedPetitionIndexItemList={allowedPetitionIndexItemList}\r\n      categoryPetitionsIndexItemList={categoryPetitionsIndexItemList}\r\n      category={category}\r\n      handleCategory={handleCategory}\r\n      handlePetitionType={handlePetitionType}\r\n      type={type}\r\n      handleSearchPetition={handleSearchPetition}\r\n      handleSearchCategoryPetition={handleSearchCategoryPetition}\r\n    />\r\n  );\r\n};\r\n\r\nPetition.propTypes = {\r\n  store: PropTypes.any\r\n};\r\n\r\nexport default inject('store')(observer(Petition));","import React from 'react';\r\nimport PageTemplate from 'components/Common/PageTemplate';\r\nimport PetitionContainer from '../containers/Petition';\r\n\r\nconst Petition = () => {\r\n  return (\r\n    <>\r\n      <PageTemplate url={'/'}>\r\n        <PetitionContainer/>\r\n      </PageTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Petition;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport style from './PetitionWriteTemplate.scss';\r\nimport moment from 'moment';\r\nimport classNames from 'classnames';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst PetitionWriteTemplate = ({titleObj, contentsObj, categoryObj, handleWritePetition, history, handleContentsLegnth, handleTitleLength}) => {\r\n  const { title, setTitle } = titleObj;\r\n  const { contents, setContents } = contentsObj;\r\n  const { category, setCategory } = categoryObj;\r\n\r\n  return (\r\n    <div className={cx('PetitionWriteTemplate')}>\r\n      <div className={cx('PetitionWriteTemplate-title')}>\r\n        <span>지금 청원하기</span>\r\n      </div>\r\n      <div className={cx('PetitionWriteTemplate-guideContentOne')}>\r\n        <div className={cx('PetitionWriteTemplate-guideContentOne-title')}>\r\n          <span>학생회 학생청원 게시판 운영 원칙</span>\r\n        </div>\r\n        <ul>\r\n          <li className={cx('PetitionWriteTemplate-guideContentOne-list')}>\r\n            학생회는 사상과 표현의 다양성을 존중합니다. 동시에 타인의 권리를 침해하거나 명예를 훼손하는 내용은 제한합니다. 방송통신심의위원회의 '정보통신에 관한 심의 규정', 한국인터넷자율정책기구의 '정책규정' 등을 기반으로 문제 게시물은 삭제될 수 있습니다. 자극적이고 혐오스러운 내용, 비속어, 폭력적 내용, 특정 대상을 비하하거나 차별을 조장하는 내용, 개인정보 유출을 비롯해 타인의 권리를 침해하는 내용, 반복되는 내용, 허위사실 등은 삭제나 숨김 처리될 수 있습니다.\r\n          </li>\r\n          <li className={cx('PetitionWriteTemplate-guideContentOne-list')}>\r\n            청원글은 게시 후 학생청원 게시판에 공개됩니다. 청원이 공개된 후 60% 이상의 동의를 받은 청원에 대해 답변합니다.\r\n          </li>\r\n          <li className={cx('PetitionWriteTemplate-guideContentOne-list')}>\r\n            한 번 작성된 청원은 수정 및 삭제가 불가능합니다. 최초 청원 취지와 다른 내용으로 변경되는 것을 방지하여 청원 참여자의 의견을 보호하기 위한 조치이니 신중하게 작성하여 주시기 바랍니다.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className={cx('PetitionWriteTemplate-guideContentTwo')}>\r\n      <div className={cx('PetitionWriteTemplate-guideContentTwo-title')}>\r\n          <span>청원 작성 요령</span>\r\n        <ul>\r\n          <li className={cx('PetitionWriteTemplate-guideContentTwo-list')}>\r\n            청원 내용을 대표하는 짧은 제목(100자 이하)을 입력해주세요. 주요 단어를 제목에 포함시켜 주시면 검색을 통한 노출이 잘 이뤄질 수 있습니다.\r\n          </li>\r\n          <li className={cx('PetitionWriteTemplate-guideContentTwo-list')}>\r\n            청원 내용과 관련된 분야를 선택해주세요. 참여자들이 '분야별 청원' 메뉴를 통해 접근할 수 있습니다\r\n          </li>\r\n          <li className={cx('PetitionWriteTemplate-guideContentTwo-list')}>\r\n            사람들이 쉽게 읽고 이해할 수 있는 내용으로 작성해주시면 됩니다. 글자 수는 최대 1000자까지 입력 가능합니다.\r\n          </li>\r\n          <li className={cx('PetitionWriteTemplate-guideContentTwo-list')}>\r\n            한번 작성된 청원은 수정 및 삭제가 불가능합니다. 최초 청원 취지와 다른 내용으로 변경되는 것을 방지하여 청원작성자의 의견을 보호하기 위한 조치이니 신중하게 게시해주시기 바랍니다.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      </div>\r\n      <div className={cx('PetitionWriteTemplate-centerLine')}/>\r\n      <div className={cx('PetitionWriteTemplate-titleDiv')}>\r\n        <div className={cx('PetitionWriteTemplate-titleDiv-title')}>\r\n          <span>청원 제목</span>\r\n        </div>\r\n        <div className={cx('PetitionWriteTemplate-titleDiv-titleInputDiv')}>\r\n          <input className={cx('PetitionWriteTemplate-titleDiv-titleInputDiv-titleInput')} value={title} onChange={(e) => handleTitleLength(e)}/>\r\n        </div>\r\n        <span className={cx('PetitionWriteTemplate-titleDiv-title-titleLength')}>{title.length}/50자</span>\r\n      </div>\r\n      <div className={cx('PetitionWriteTemplate-categoryDiv')}>\r\n        <div className={cx('PetitionWriteTemplate-categoryDiv-title')}>\r\n          <span>카테고리</span>\r\n        </div>\r\n        <div className={cx('PetitionWriteTemplate-titleDiv-titleInputDiv')}>\r\n          <select className={cx('PetitionWriteTemplate-titleDiv-titleInputDiv-titleInput')} value={category} onChange={(e) => {setCategory(e.target.value)}}>\r\n            <option value={'empty'}>카테고리 선택</option>\r\n            <option value={'기숙사'}>기숙사</option>\r\n            <option value={'학생회'}>학생회</option>\r\n            <option value={'축제'}>축제</option>\r\n            <option value={'운동회'}>운동회</option>\r\n            <option value={'해커톤'}>해커톤</option>\r\n            <option value={'동아리'}>동아리</option>\r\n            <option value={'나르샤'}>나르샤</option>\r\n            <option value={'강의'}>강의</option>\r\n            <option value={'급식'}>급식</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className={cx('PetitionWriteTemplate-contentsBox')}>\r\n        <div className={cx('PetitionWriteTemplate-contentsBox-title')}>\r\n          <span>청원내용</span>\r\n        </div>\r\n        <div className={cx('PetitionWriteTemplate-contentsBox-contentsDiv')}>\r\n          <textarea className={cx('PetitionWriteTemplate-contentsBox-contentsDiv-contents')} value={contents} onChange={(e) => handleContentsLegnth(e)}/>\r\n        </div>\r\n        <div className={cx('PetitionWriteTemplate-contentLengthDiv')}>\r\n          {contents.length}/1000자\r\n        </div>\r\n      </div>\r\n      <div className={cx('PetitionWriteTemplate-buttonDiv')}>\r\n        <button className={cx('PetitionWriteTemplate-buttonDiv-button')} onClick={() => handleWritePetition()}>작성 완료</button>\r\n        <button className={cx('PetitionWriteTemplate-buttonDiv-cancleButton')} onClick={() => history.goBack(1)}>작성 취소</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPetitionWriteTemplate.propTypes = {\r\n  titleObj: PropTypes.object,\r\n  contentsObj: PropTypes.object,\r\n  categoryObj: PropTypes.object,\r\n  handleWritePetition: PropTypes.func\r\n};\r\n\r\nexport default withRouter(PetitionWriteTemplate);","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport PetitionWriteTemplate from 'components/PetitionWrite/PetitionWriteTemplate';\r\nimport { inject, observer } from 'mobx-react';\r\nimport GroupingState from 'lib/HookState/GroupingState';\r\nimport { Prompt } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PetitionWriteContainer = ({ store, history }) => {\r\n  const { writePetition } = store.petitionStore; // 청원 작성 서버 요청 함수\r\n  const { modal } = store.dialog; // 모달\r\n\r\n  // 제목, 내용, 카테고리 변수 선언\r\n  const [title, setTitle] = useState('');\r\n  const [contents, setContents] = useState('');\r\n  const [category, setCategory] = useState('선택 안됨');\r\n\r\n    // Prompt 제어 state\r\n    const [isConfirmed, setIsConfirmed] = useState(false);\r\n\r\n  // 업로드 완료 후 페이지 이동을 위한 변수\r\n  const [isUploadPetition, setIsUploadPetition] = useState(true);\r\n\r\n  const useComponentDidMount = func => useEffect(func, []);\r\n\r\n  const navigate = async (path) => {\r\n    history.push(path);\r\n  };\r\n\r\n  const handleContentsLegnth = async (event) => {\r\n    if (1000 < event.target.value.length) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '1000자 이내로 작성해 주세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    setContents(event.target.value);\r\n  };\r\n\r\n  const handleTitleLength = async (event) => {\r\n    if (50 < event.target.value.length) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '제목은 50자 이내로 작성해 주세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    setTitle(event.target.value);\r\n  };\r\n\r\n  const handleBlockedNavigation = nextLocation => {\r\n    if (!isConfirmed) {  \r\n      modal({\r\n        modalType: 'basic',\r\n        title: 'Warning!',\r\n        contents: '작성된 내용이 사라질 수 있습니다. 이동하시겠습니까?',\r\n        confirmFunc: async () => {\r\n          await setIsConfirmed(true);\r\n          await navigate(nextLocation.pathname);\r\n        }\r\n      });\r\n\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n\r\n  // 청원 글 작성 함수\r\n  const handleWritePetition = async () => {\r\n\r\n    // 예외 처리\r\n    if (title.length === 0) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '제목을 입력해 주세요.'\r\n      });\r\n\r\n      return;\r\n    } else if (contents.length === 0) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '청원 내용을 입력해 주세요.'\r\n      });\r\n\r\n      return;\r\n    } else if (category === '선택 안됨') {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '카테고리를 선택해 주세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n    \r\n    // 데이터 설정\r\n    let data = {\r\n      title,\r\n      contents,\r\n      category\r\n    };\r\n\r\n    await writePetition(data)\r\n      .then((response) => {\r\n        modal({\r\n          title: 'Success!',\r\n          stateType: 'success',\r\n          contents: '청원이 성공적으로 등록 되었습니다.',\r\n          closeFunc: () => { \r\n            setIsUploadPetition(false);\r\n            history.goBack(1); \r\n          }\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        const { status } = error.response;\r\n        if (status === 400) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '양식이 맞지 않아요!'\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        if (status === 500) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '서버 에러! 조금만 기다려 주세요. (__)'\r\n          });\r\n\r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  const useComponentWillMount = func => {\r\n    const willMount = useRef(true);\r\n  \r\n    if (willMount.current) {\r\n      func();\r\n    }\r\n  \r\n    useComponentDidMount(() => {\r\n      willMount.current = false;\r\n    });\r\n  };\r\n\r\n  useComponentWillMount(() => {\r\n    if (handleBlockedNavigation) {\r\n      window.onbeforeunload = () => true;\r\n    } else {\r\n      window.onbeforeunload = undefined;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isUploadPetition\r\n          ? <Prompt when={true} message={handleBlockedNavigation}/>\r\n          : <></>\r\n      }\r\n    <PetitionWriteTemplate\r\n      titleObj={GroupingState('title', title, setTitle)}\r\n      contentsObj={GroupingState('contents', contents, setContents)}\r\n      categoryObj={GroupingState('category', category, setCategory)}\r\n      handleWritePetition={handleWritePetition}\r\n      history={history}\r\n      handleContentsLegnth={handleContentsLegnth}\r\n      handleTitleLength={handleTitleLength}\r\n    />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default inject('store')(observer(withRouter(PetitionWriteContainer)));","import React from 'react';\r\nimport PageTemplate from 'components/Common/PageTemplate';\r\nimport PetitionWriteContainer from '../containers/PetitionWriteContainer';\r\n\r\n\r\nconst PetitionWrite = () => {\r\n  return (\r\n    <>\r\n      <PageTemplate url={'petition-write'}>\r\n        <PetitionWriteContainer/>\r\n      </PageTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PetitionWrite;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './AdminTemplate.scss';\r\nimport classNames from 'classnames';\r\nimport { FiSearch } from 'react-icons/fi';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst AdminTemplate = ({ memberList, handleSearchMember }) => {\r\n\r\n  const [searchWord, setSearchWord] = useState('');\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSearchMember(searchWord);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={cx('AdminTemplate')}>\r\n        <div className={cx('AdminTemplate-titleDiv')}>\r\n          <span className={cx('AdminTemplate-titleDiv-title')}>학생 리스트</span>\r\n          <span className={cx('AdminTemplate-titleDiv-description')}>학생 리스트 입니다. 학생회 권한을 부여 할 수 있습니다.</span>\r\n          <div className={cx('AdminTemplate-titleDiv-searchDiv')}>\r\n            <span>사용자 검색:</span>\r\n            <input className={cx('AdminTemplate-titleDiv-searchDiv-searchInput')} placeholder={'ID 혹은 이름 검색'} value={searchWord} onChange={(e) => setSearchWord(e.target.value)} onKeyPress={(e) => handleKeyPress(e)}/>\r\n            <div className={cx('AdminTemplate-titleDiv-searchDiv-iconDiv')} onClick={() =>  handleSearchMember(searchWord)}>\r\n              <FiSearch className={cx('AdminTemplate-titleDiv-searchDiv-iconDiv-icon')}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={cx('AdminTemplate-header')}>\r\n          <div className={cx('AdminTemplate-header-category')}>\r\n            <span>이름</span>\r\n          </div>\r\n          <div className={cx('AdminTemplate-header-category')}>\r\n            <span>학반</span>\r\n          </div>\r\n          <div className={cx('AdminTemplate-header-category')}>\r\n            <span>ID</span>\r\n          </div>\r\n          <div className={cx('AdminTemplate-header-category')}>\r\n            <span>가입 날짜</span>\r\n          </div>\r\n          <div className={cx('AdminTemplate-header-authDiv')}>\r\n            <span>권한</span>\r\n          </div>          \r\n        </div>\r\n        <div className={cx('AdminTemplate-contentsDiv')}>\r\n          {\r\n            memberList.length === 0 ?\r\n              <div className={cx('AdminTemplate-contentsDiv-notFoundDiv')}>학생 정보 없음</div>\r\n            : memberList\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nAdminTemplate.propTypes = {\r\n  memberList: PropTypes.array,\r\n  handleSearchMember: PropTypes.func\r\n};\r\n\r\nexport default AdminTemplate;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './AdminItem.scss';\r\nimport moment from 'moment';\r\nimport classNames from 'classnames';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst AdminItem = ({ item, addAuthToMember, deleteMemberAuth }) => {\r\n\r\n  const { id, grade, studentClass, number, name, joinDate, accessLevel } = item;\r\n\r\n  const [isDeleteAuth, isSetDeleteAuth] = useState(false);\r\n\r\n  const joinDateFormat = moment(joinDate).format('YYYY-MM-DD');\r\n\r\n  useEffect(() => {\r\n    if (accessLevel === 0 || accessLevel === 1) {\r\n      isSetDeleteAuth(true);\r\n    };\r\n  }, []);\r\n  \r\n  return (\r\n    <div className={cx('AdminItemTemplate')}>\r\n      <div className={cx('AdminItemTemplate-categoryDiv')}>\r\n        <span>{name}</span>\r\n      </div>\r\n      <div className={cx('AdminItemTemplate-categoryDiv')}>\r\n        <span>{grade}학년 {studentClass}반 {number}번</span>\r\n      </div>\r\n      <div className={cx('AdminItemTemplate-categoryDiv')}>\r\n        <span>{id}</span>\r\n      </div>\r\n      <div className={cx('AdminItemTemplate-categoryDiv')}>\r\n        <span>{joinDateFormat}</span>\r\n      </div>\r\n      <div className={cx('AdminItemTemplate-authDiv')}>\r\n        <div className={cx('AdminItemTemplate-authDiv-buttonDiv')}>\r\n           {\r\n             isDeleteAuth ? \r\n              <button className={cx('AdminItemTemplate-authDiv-buttonDiv-deleteButton')} onClick={() => deleteMemberAuth(id)}>학생회 권한 삭제</button>\r\n              : <button className={cx('AdminItemTemplate-authDiv-buttonDiv-AddButton')} onClick={() => addAuthToMember(id)}>학생회 추가</button>\r\n           }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nAdminItem.propTypes = {\r\n\r\n};\r\n\r\nexport default AdminItem;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport GroupingState from 'lib/HookState/GroupingState';\r\nimport AdminTemplate from 'components/Admin/AdminTemplate/AdminTemplate';\r\nimport AdminItem from 'components/Admin/AdminItem/AdminItem';\r\nimport usePending from 'lib/HookState/usePending';\r\nimport { Prompt } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AdminContainer = ({ store, history }) => {\r\n  const { memberData, getOrderMember, authorizationStudent, deleteAuth, searchMember } = store.adminStore;\r\n\r\n  const { modal } = store.dialog;\r\n\r\n  const [memberList, setMemberList] = useState([]);\r\n\r\n  const handleMemberInfo = async () => {\r\n    await getOrderMember();\r\n  };\r\n\r\n  const handleSearchMember = async (searchWordData) => {\r\n    if (searchWordData === '') {\r\n      await getData();\r\n\r\n      return;\r\n    } \r\n    await searchMember(searchWordData);\r\n    setMemberList(memberData.map((item, index) => <AdminItem key={index} item={item} addAuthToMember={addAuthToMember} deleteMemberAuth={deleteMemberAuth}/>));\r\n  };\r\n\r\n  const deleteMemberAuth = async (id) => {\r\n    let data = {\r\n      id,\r\n    };\r\n\r\n    await deleteAuth(data)\r\n      .then(response => {\r\n        modal({\r\n          title: 'Success!',\r\n          stateType: 'success',\r\n          contents: '학생회 권한 삭제 완료.'\r\n        });\r\n      })\r\n      .catch(error => {\r\n        const { status } = error.response;\r\n\r\n        if (status === 400) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '양식이 맞지 않아요!'\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        if (status === 403) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '권한 없음!'\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        if (status === 500) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '서버 에러! 조금만 기다려 주세요. (__)'\r\n          });\r\n\r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  const addAuthToMember = async (id) => {\r\n    let data = {\r\n      id,\r\n    };\r\n\r\n    await authorizationStudent(data)\r\n      .then(response => {\r\n        modal({\r\n          title: 'Success!',\r\n          stateType: 'success',\r\n          contents: '학생회 권한 추가 완료.'\r\n        });\r\n      })\r\n      .catch(error => {\r\n        const { status } = error.response;\r\n\r\n        if (status === 400) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '양식이 맞지 않아요!'\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        if (status === 403) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '권한 없음!'\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        if (status === 500) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '서버 에러! 조금만 기다려 주세요. (__)'\r\n          });\r\n\r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  const[isLoading, getData] = usePending(handleMemberInfo);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMemberList(memberData.map((item, index) => <AdminItem key={index} item={item} addAuthToMember={addAuthToMember} deleteMemberAuth={deleteMemberAuth}/>));\r\n  }, [memberData]);\r\n\r\n  return (\r\n    <AdminTemplate\r\n      memberList={memberList}\r\n      handleSearchMember={handleSearchMember}\r\n    />\r\n  );\r\n};\r\n\r\nAdminContainer.propTypes = {\r\n\r\n};\r\n\r\nexport default inject('store')(observer(withRouter(AdminContainer)));","import React from 'react';\r\nimport PageTemplate from 'components/Common/PageTemplate';\r\nimport AdminContainer from 'containers/Admin/AdminContainer';\r\n// import PetitionContainer from '../containers/Petition';\r\n\r\nconst Admin = () => {\r\n  return (\r\n    <>\r\n      <PageTemplate url={'/admin'}>\r\n        <AdminContainer/>\r\n      </PageTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Admin;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './PetitionCommentItem.scss';\r\nimport { withRouter } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport classNames from 'classnames';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst PetitionCommentItem = ({ item }) => {\r\n  \r\n  const { id, contents,joinDate } = item;\r\n\r\n  let memberIdLength;\r\n\r\n  if (id) {\r\n    memberIdLength = id[0];\r\n    for (let i = 1; i < id.length; i++) {\r\n      memberIdLength += '*';\r\n    };\r\n  }\r\n\r\n  const joinDateFormat = moment(joinDate).format('YYYY-MM-DD');\r\n\r\n  return (\r\n    <div className={cx('PetitionCommentItemDiv')}>\r\n      <div className={cx('PetitionCommentItemDiv-idDiv')}>\r\n        <div className={cx('PetitionCommentItemDiv-idDiv-id')}>\r\n          {memberIdLength}\r\n        </div>\r\n        <div className={cx('PetitionCommentItemDiv-idDiv-joinDate')}>\r\n          {joinDateFormat}\r\n        </div>\r\n      </div>\r\n      <div className={cx('PetitionCommentItemDiv-contentsDiv')}>\r\n        <div className={cx('PetitionCommentItemDiv-contentsDiv-contents')}>\r\n          {contents}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PetitionCommentItem;","import React, { useEffect, useState } from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport classNames from 'classnames/bind';\r\nimport moment from 'moment';\r\nimport ReactPlayer from 'react-player';\r\nimport style from './PetitionDetailTemplate.scss';\r\nimport { BsFillCircleFill } from 'react-icons/bs';\r\nimport schoolImage from 'assets/image/schoolImage.jpg';\r\nimport PetitionCommentItem from 'components/PetitionDetail/PetitionCommentItem/PetitionCommentItem';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst PetitionDetailTemplate = ({ detailData,adminAuth,\r\n    commentContentsObj,\r\n    handlePetitionDelete,\r\n    handleWriteCommentFunc, \r\n    handleWritePagePath,\r\n    sideAllowedPetition,\r\n    handleBlindPetition,\r\n    handleAllowPetition\r\n  }) => {\r\n\r\n  const { idx, title, contents, category, joinDate, id, blind, comment, voteCount } = detailData;\r\n  let { isAllowed } = detailData;\r\n  \r\n\r\n  const joinDateFormat = moment(joinDate).format('YYYY-MM-DD');\r\n  \r\n  const { commentContents, setCommentContents } = commentContentsObj;\r\n  const [commentArray, setCommentArray] = useState([]);\r\n\r\n  let memberIdLength;\r\n  \r\n  if (isAllowed === 0) {\r\n    isAllowed = '승인 대기 중';\r\n  } else if (isAllowed === 1) {\r\n    isAllowed = '승인 완료';\r\n  }\r\n  if (id) {\r\n    memberIdLength = id[0];\r\n    for (let i = 1; i < id.length; i++) {\r\n      memberIdLength += '*';\r\n    };\r\n  }\r\nuseEffect(() => {\r\n  if (comment) {\r\n    setCommentArray(comment.map((item) => <PetitionCommentItem key={item.idx} item={item}/>));\r\n  }\r\n}, [comment]);\r\n  \r\n  return (\r\n    <div className={cx('PetitionDetailTemplate')}>\r\n      <div className={cx('PetitionDetailTemplate-contentsDiv')}>\r\n        <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv')}>\r\n          <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-guideDiv')}>\r\n            <span>- 청원 {isAllowed} -</span>\r\n          </div>\r\n          <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-title')}>\r\n            <span>{title}</span>\r\n          </div>\r\n          <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-voteDiv')}>\r\n            <span>참여 인원: [ </span><span className={cx('categoryColor')}>{voteCount}</span> <span>명 ]</span>\r\n          </div>\r\n          <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-infoDiv')}>\r\n            <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-infoDiv-categoryDiv')}>\r\n              <span>카테고리: {category}</span>\r\n            </div>\r\n            <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-infoDiv-categoryDiv')}>\r\n              <span>청원 등록일: {joinDateFormat}</span>\r\n            </div>\r\n            <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-infoDiv-categoryDiv')}>\r\n              <span>청원 처리 상태: {isAllowed}</span>\r\n            </div>\r\n            <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-infoDiv-categoryDiv')}>\r\n              <span>청원인: {memberIdLength}</span>\r\n            </div>\r\n          </div>\r\n          <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv')}>\r\n            <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv-graph')}>\r\n              <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv-graph-start')}>\r\n                <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv-graph-start-iconDiv')}>\r\n                  <BsFillCircleFill className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv-graph-start-iconDiv-icon')}/>\r\n                </div>\r\n                <span>청원 시작</span>\r\n              </div>\r\n              <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv-graph-start')}>\r\n              <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv-graph-start-iconDiv')}>\r\n                  <BsFillCircleFill className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv-graph-start-iconDiv-icon', {'statusColor': isAllowed === '승인 대기 중'})}/>\r\n                </div>\r\n                <span>승인 대기 중</span>\r\n              </div>\r\n              <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv-graph-start')}>\r\n              <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv-graph-start-iconDiv')}>\r\n                  <BsFillCircleFill className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-statusDiv-graph-start-iconDiv-icon', {'statusColor': isAllowed === '승인 완료'})}/>\r\n                </div>\r\n                <span>승인 완료</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={cx('PetitionDetailTemplate-contentsDiv-titleDiv-contentsTitleDiv')}>\r\n            <span>청원 내용</span>\r\n          </div>\r\n        </div>\r\n        <div className={cx('PetitionDetailTemplate-contentsDiv-contentsBox')}>\r\n          {contents}\r\n      </div>\r\n        <div className={cx('PetitionDetailTemplate-contentsDiv-commentDiv')}>\r\n          <div className={cx('PetitionDetailTemplate-contentsDiv-commentDiv-titleDiv')}>\r\n            <div className={cx('PetitionDetailTemplate-contentsDiv-commentDiv-titleDiv-title')}>\r\n              <span>청원 동의 {voteCount}명</span>\r\n            </div>\r\n          </div>\r\n          <div className={cx('PetitionDetailTemplate-contentsDiv-commentDiv-commentWriteDiv')}>\r\n            <div className={cx('PetitionDetailTemplate-contentsDiv-commentDiv-commentWriteDiv-textDiv')}>\r\n              <textarea className={cx('PetitionDetailTemplate-contentsDiv-commentDiv-commentWriteDiv-textDiv-text')} placeholder={'동의 댓글 작성...'} value={commentContents} onChange={(e) => setCommentContents(e.target.value)}/>\r\n            </div>\r\n            <div className={cx('PetitionDetailTemplate-contentsDiv-commentDiv-commentWriteDiv-sendButtonDiv')}>\r\n              <button className={cx('PetitionDetailTemplate-contentsDiv-commentDiv-commentWriteDiv-sendButtonDiv-sendButton')} onClick={() => handleWriteCommentFunc(idx)}>동의</button>\r\n            </div>\r\n          </div>\r\n          <div className={cx('PetitionDetailTemplate-contentsDiv-commentDiv-commentTemplate')}>\r\n            {commentArray}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={cx('PetitionDetailTemplate-bannerDiv')}> \r\n        <div className={cx('PetitionDetailTemplate-bannerDiv-petitionWriteDiv')}>\r\n          <div className={cx('PetitionDetailTemplate-bannerDiv-petitionWriteDiv-title')}>\r\n            <span>2020 학생회 지금 청원 하러 가기</span>\r\n          </div>\r\n          <div className={cx('PetitionDetailTemplate-bannerDiv-petitionWriteDiv-imgDiv')} onClick={() => handleWritePagePath()}>\r\n            <img className={cx('PetitionDetailTemplate-bannerDiv-petitionWriteDiv-imgDiv-img')}src={schoolImage}/>\r\n          </div>\r\n        </div>\r\n        <div className={cx('PetitionDetailTemplate-bannerDiv-schoolYoutubeDiv')}>\r\n          <div className={cx('PetitionDetailTemplate-bannerDiv-schoolYoutubeDiv-title')}>\r\n            <span>학교 홍보 영상</span>\r\n          </div>\r\n          <ReactPlayer width={\"280px\"} height={\"200px\"} url={'https://www.youtube.com/watch?v=6Z71dmwOEyM'} loop controls/>\r\n        </div>\r\n        <div className={cx('PetitionDetailTemplate-bannerDiv-allowedPetitionDiv')}>\r\n          <div className={cx('PetitionDetailTemplate-bannerDiv-allowedPetitionDiv-title')}>\r\n            <span>승인된 청원</span>\r\n          </div>\r\n          {sideAllowedPetition}\r\n        </div>\r\n        {\r\n          adminAuth ?\r\n          <>\r\n            <div className={cx('PetitionDetailTemplate-bannerDiv-adminButtonsDiv')}>\r\n              <button className={cx('PetitionDetailTemplate-bannerDiv-adminButtonsDiv-allowButton')} onClick={() => handleAllowPetition(idx)}>청원 승인</button>\r\n            </div>\r\n            <div className={cx('PetitionDetailTemplate-bannerDiv-adminButtonsDiv')}>\r\n              <div className={cx('PetitionDetailTemplate-bannerDiv-adminButtonsDiv-deleteButtonDiv')}>\r\n                <button className={cx('PetitionDetailTemplate-bannerDiv-adminButtonsDiv-deleteButtonDiv-deleteButton')} onClick={() => handlePetitionDelete(idx)}>청원 삭제</button>\r\n              </div>\r\n              <div className={cx('PetitionDetailTemplate-bannerDiv-adminButtonsDiv-blindButtonDiv')}> \r\n                <button className={cx('PetitionDetailTemplate-bannerDiv-adminButtonsDiv-blindButtonDiv-blindButton')} onClick={() => handleBlindPetition(idx, 1)}>청원 블라인드</button>\r\n              </div>\r\n            </div>\r\n            {\r\n              blind ?\r\n              <div className={cx('PetitionDetailTemplate-bannerDiv-adminButtonsDiv-notBlindButtonDiv')}> \r\n                <button className={cx('PetitionDetailTemplate-bannerDiv-adminButtonsDiv-blindButtonDiv-blindButton')} onClick={() => handleBlindPetition(idx, 0)}>청원 블라인드 해제</button>\r\n              </div>\r\n              : <></>\r\n            }\r\n\r\n            </>\r\n            : <></>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nPetitionDetailTemplate.propTypes = {\r\n  detailData: PropTypes.object,\r\n  commentContentsObj: PropTypes.object,\r\n  handleWriteCommentFunc: PropTypes.func,\r\n  handleWritePagePath: PropTypes.func,\r\n  sideAllowedPetition: PropTypes.array\r\n};\r\n\r\nexport default PetitionDetailTemplate;","import React from 'react';\r\nimport PropTypes  from 'prop-types';\r\nimport classNames from 'classnames/bind';\r\nimport moment from 'moment';\r\nimport style from './SideAllowedPetitionItem.scss';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst SideAllowedPetitionItem = ({ item, count, history }) => {\r\n  \r\n  const { idx, title, joinDate } = item;\r\n  \r\n  const handlePetitionDetail = async () => {\r\n    localStorage.setItem(\"petition-idx\", idx);\r\n    // history.push('/');\r\n    history.push('/petition-detail');\r\n  };\r\n\r\n  const joinDateFormat = moment(joinDate).format('MM-DD');\r\n  \r\n  return (\r\n    <div className={cx('SideAllowedPetitionItem')} onClick={() => handlePetitionDetail()}>\r\n      <div className={cx('SideAllowedPetitionItem-countDiv')}>\r\n        <span>{count + 1}.</span>\r\n      </div>\r\n      <div className={cx('SideAllowedPetitionItem-titleDiv')}>\r\n        {title}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSideAllowedPetitionItem.propTypes = {\r\n  item: PropTypes.object,\r\n  count: PropTypes.number,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SideAllowedPetitionItem);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\nimport usePending from 'lib/HookState/usePending';\r\nimport PetitionDetailTemplate from 'components/PetitionDetail/PetitionDetailTemplate';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SecureLS from 'secure-ls';\r\nimport SideAllowedPetitionItem from 'components/PetitionDetail/SideAllowedPetitionItem/SideAllowedPetitionItem';\r\nimport GroupingState from 'lib/HookState/GroupingState';\r\nimport TokenVerification from 'lib/Token/TokenVerification';\r\n\r\nconst PetitionDetailContainer = ({ store, history }) => {\r\n  const { getPetitionDetail, PetitionDetailData, deletePetition, allowPetition, blindPetition, writePetitionComment, getPetitionFeed, allowedPetitions} = store.petitionStore;\r\n  // const { deletePeition } = store.adminStore;\r\n  const { modal } = store.dialog;\r\n  const [detailData, setDetailData] = useState({});\r\n  const [commentContents, setCommentContents] = useState('');\r\n  const [sideAllowedPetition, setSideAllowedPetition] = useState([]);\r\n  const [adminAuth, setAdminAuth] = useState(false);\r\n\r\n  const idx = localStorage.getItem(\"petition-idx\");\r\n\r\n  \r\n  const ls = new SecureLS({ encodingType: 'aes' });\r\n\r\n  const userInfo = ls.get('user-info');\r\n\r\n  const handleAllowPetition = async (idx) => {\r\n\r\n    const data = {\r\n      idx,\r\n    };\r\n\r\n    await modal({\r\n      modalType: 'basic',\r\n      title: 'Warning!',\r\n      contents: '해당 청원 글을 승인 처리하시겠습니까?',\r\n      confirmFunc: async () => {\r\n        await allowPetition(data).\r\n          then((response) => {\r\n            modal({\r\n              title: 'Success!',\r\n              stateType: 'success',\r\n              contents: '청원이 성공적으로 승인 처리되었습니다.',\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            const { status } = error.response;\r\n\r\n            if (status === 405) {\r\n              modal({\r\n                title: 'Error!',\r\n                stateType: 'error',\r\n                contents: '이미 승인 처리 된 청원입니다.'\r\n              });\r\n    \r\n              return;\r\n            }\r\n\r\n            if (status === 403) {\r\n              modal({\r\n                title: 'Error!',\r\n                stateType: 'error',\r\n                contents: '권한 없음!'\r\n              });\r\n    \r\n              return;\r\n            }\r\n    \r\n            if (status === 500) {\r\n              modal({\r\n                title: 'Error!',\r\n                stateType: 'error',\r\n                contents: '서버 에러! 조금만 기다려 주세요. (__)'\r\n              });\r\n    \r\n              return;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const handleBlindPetition = async (idx, isBlind) => {\r\n    let guideStr = '';\r\n    const data = {\r\n      idx,\r\n      isBlind,\r\n    };\r\n\r\n    if (!isBlind) {\r\n      guideStr = '블라인드 해제';\r\n    } else {\r\n      guideStr = '블라인드';\r\n    }\r\n\r\n    await modal({\r\n      modalType: 'basic',\r\n      title: 'Warning!',\r\n      contents: `해당 청원 글을 ${guideStr} 처리하시겠습니까?`,\r\n      confirmFunc: async () => {\r\n        await blindPetition(data).\r\n          then((response) => {\r\n            modal({\r\n              title: 'Success!',\r\n              stateType: 'success',\r\n              contents: `청원이 성공적으로 ${guideStr} 처리되었습니다.`,\r\n            });\r\n            history.push('/');\r\n          })\r\n          .catch((error) => {\r\n            const { status } = error.response;\r\n            if (status === 403) {\r\n              modal({\r\n                title: 'Error!',\r\n                stateType: 'error',\r\n                contents: '권한 없음!'\r\n              });\r\n    \r\n              return;\r\n            }\r\n    \r\n            if (status === 500) {\r\n              modal({\r\n                title: 'Error!',\r\n                stateType: 'error',\r\n                contents: '서버 에러! 조금만 기다려 주세요. (__)'\r\n              });\r\n    \r\n              return;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleadminAuth = () => {\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n\r\n    if (token) {\r\n      if (userInfo.accessLevel === 0 || userInfo.accessLevel === 1) {\r\n        setAdminAuth(true);\r\n      } else if (userInfo.accessLevel === 2) {\r\n        return;\r\n      }\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handlePetitionDetail = async () => {\r\n    await getPetitionDetail(idx);\r\n  };\r\n\r\n  const handlePetitionDelete = async (idx) => {\r\n    await modal({\r\n      modalType: 'basic',\r\n      title: 'Warning!',\r\n      contents: '해당 청원 글을 삭제 하시겠습니까?',\r\n      confirmFunc: async () => {\r\n        await deletePetition(idx).\r\n          then((response) => {\r\n            modal({\r\n              title: 'Success!',\r\n              stateType: 'success',\r\n              contents: '청원이 성공적으로 삭제 되었습니다.',\r\n            });\r\n            history.push('/');\r\n          })\r\n          .catch((error) => {\r\n            const { status } = error.response;\r\n            if (status === 400) {\r\n              modal({\r\n                title: 'Error!',\r\n                stateType: 'error',\r\n                contents: '양식이 맞지 않아요!'\r\n              });\r\n    \r\n              return;\r\n            }\r\n    \r\n            if (status === 500) {\r\n              modal({\r\n                title: 'Error!',\r\n                stateType: 'error',\r\n                contents: '서버 에러! 조금만 기다려 주세요. (__)'\r\n              });\r\n    \r\n              return;\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleWritePagePath = async () => {\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n\r\n    if (token === null) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '로그인 후 이용해 주세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    history.push('/petition-write');\r\n  };\r\n\r\n  const handleSideAllowedPetition = async () => {\r\n    await getPetitionFeed(1, 5, 'allowed');\r\n  };\r\n\r\n  const handleWriteComment = async (petitionIdx) => {\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n    \r\n    if (token === null) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '로그인 후 이용해 주세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n    \r\n      \r\n    if (commentContents.length === 0) {\r\n      await modal({\r\n        title: 'Warning!',\r\n        stateType: 'warning',\r\n        contents: '댓글을 작성 해주세요.'\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    let data = {\r\n      petitionIdx,\r\n      contents: commentContents,\r\n    };\r\n\r\n    await writePetitionComment(data).\r\n      then((response) => {\r\n        modal({\r\n          title: 'Success!',\r\n          stateType: 'success',\r\n          contents: '댓글 작성 성공!'\r\n        });\r\n\r\n        getData();\r\n  \r\n        return;\r\n      })\r\n      .catch((error) => {\r\n        const { status } = error.response;\r\n\r\n        if (status === 400) {\r\n          modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '양식이 맞지 않습니다.'\r\n          });\r\n    \r\n          return;\r\n        }\r\n\r\n        if (status === 403) {\r\n          modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '이미 동의한 청원 입니다.'\r\n          });\r\n    \r\n          return;\r\n        }\r\n\r\n        if (status === 405) {\r\n          modal({\r\n            title: 'Warning!',\r\n            stateType: 'warning',\r\n            contents: '이미 승인 처리 된 청원 입니다.'\r\n          });\r\n    \r\n          return;\r\n        }\r\n\r\n\r\n        if (status === 500) {\r\n          modal({\r\n            title: 'Error!',\r\n            stateType: 'error',\r\n            contents: '서버 에러! 조금만 기다려 주세요. (__)'\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n      });\r\n  };\r\n\r\n  const [isLoading, getData] = usePending(handlePetitionDetail);\r\n  const [isLoadingSideAllowedPeition, getSideAllowedPetition] =usePending(handleSideAllowedPetition);\r\n  \r\n  useEffect(() => {\r\n    handleadminAuth();\r\n  }, []);\r\n  useEffect(() => {\r\n    getData();\r\n    getSideAllowedPetition();\r\n    window.scrollTo(0, 0);\r\n  }, [idx]);\r\n\r\n  useEffect(() => {\r\n    setDetailData(PetitionDetailData);\r\n  }, [PetitionDetailData]);\r\n\r\n  useEffect(() => {\r\n    if (allowedPetitions) {\r\n      let itemList = [];\r\n      for (let i = 0; i <allowedPetitions.length; i ++) {\r\n        itemList.push(<SideAllowedPetitionItem key={allowedPetitions[i].idx} count={i} item={allowedPetitions[i]}/>);\r\n      }\r\n      setSideAllowedPetition(itemList);\r\n    }\r\n  }, [allowedPetitions]);\r\n\r\n  return (\r\n    <PetitionDetailTemplate\r\n      detailData={detailData}\r\n      commentContentsObj = {GroupingState('commentContents', commentContents, setCommentContents)}\r\n      handleWriteCommentFunc = {handleWriteComment}\r\n      handlePetitionDelete={handlePetitionDelete}\r\n      handleWritePagePath={handleWritePagePath}\r\n      sideAllowedPetition={sideAllowedPetition}\r\n      adminAuth={adminAuth}\r\n      handleBlindPetition={handleBlindPetition}\r\n      handleAllowPetition={handleAllowPetition}\r\n    />\r\n  );\r\n};\r\n\r\nPetitionDetailContainer.propTypes = {\r\n  store: PropTypes.any,\r\n  history: PropTypes.any\r\n};\r\n\r\nexport default inject('store')(observer(withRouter(PetitionDetailContainer)));","import React from 'react';\r\nimport PageTemplate from 'components/Common/PageTemplate';\r\nimport PetitionDetailContainer from '../containers/PetitionDetailContainer/PetitionDetailContainer';\r\n\r\n\r\nconst PetitionDetail = () => {\r\n  return (\r\n    <>\r\n      <PageTemplate url={'petition-detail'}>\r\n        <PetitionDetailContainer/>\r\n      </PageTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PetitionDetail;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames/bind';\r\nimport style from './StudentCouncilTemplate.scss';\r\nimport { FiSearch } from 'react-icons/fi';\r\n\r\nconst cx = classNames.bind(style);\r\n\r\nconst StudentCouncilTemplate = ({ petitions, type, handleType, studentPetitionItemIndex }) => {\r\n  if (type === 'waiting') {\r\n    type = '투표율 60%';\r\n  } else if (type === 'blind') {\r\n    type = '블라인드 처리된';\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <div className={cx('StudentCouncilTemplate')}>\r\n      <div className={cx('StudentCouncilTemplate-header')}>\r\n        <div className={cx('StudentCouncilTemplate-header-title')}>\r\n          <span>{type} 청원 보기</span>\r\n          <div className={cx('StudentCouncilTemplate-header-title-categoryDiv')}>\r\n              {\r\n                <>\r\n                    <div className={cx('StudentCouncilTemplate-header-title-categoryDiv-buttonDiv')}>\r\n                      <button className={cx('StudentCouncilTemplate-header-title-categoryDiv-buttonDiv-NotAllowButton')} onClick={() => handleType('waiting')}>승인 <br/>검토 중 청원</button>\r\n                      <button className={cx('StudentCouncilTemplate-header-title-categoryDiv-buttonDiv-blindButton')} onClick={() => handleType('blind')}>블라인드<br/> 처리 된 청원</button>\r\n                    </div>\r\n                </>\r\n              }\r\n            </div>\r\n        </div>\r\n        <div className={cx('StudentCouncilTemplate-header-kinds')}>\r\n            <div className={cx('StudentCouncilTemplate-header-kinds-category')}>\r\n              <span>분류</span>\r\n            </div>\r\n            <div className={cx('StudentCouncilTemplate-header-kinds-title')}>\r\n              <span>제목</span>\r\n            </div>\r\n            <div className={cx('StudentCouncilTemplate-header-kinds-date')}>\r\n              <span>청원 날짜</span>\r\n            </div>\r\n            <div className={cx('StudentCouncilTemplate-header-kinds-voteCount')}>\r\n              <span>참여 수</span>\r\n            </div>\r\n          </div>\r\n      </div>\r\n        {petitions}\r\n    </div>\r\n    <div className={cx('ItemIndexListTemplate')}>\r\n      {studentPetitionItemIndex}\r\n    </div>\r\n    </>\r\n  )\r\n};\r\n\r\nStudentCouncilTemplate.propTypes = {\r\n  petitions: PropTypes.array,\r\n  type: PropTypes.string,\r\n  handleType: PropTypes.func\r\n};\r\n\r\nexport default StudentCouncilTemplate;","import React from 'react';\nimport { MobXProviderContext } from 'mobx-react';\n\nfunction useStores() {\n  return React.useContext(MobXProviderContext);\n}\n\nexport default useStores;\n","import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { observer, inject } from 'mobx-react';\r\nimport StudentCouncilTemplate from 'components/StudentCouncil/StudentCouncilTemplate';\r\nimport PetitionItem from 'components/Petition/PetitionItem/PetitionItem';\r\nimport PropTypes from 'prop-types';\r\nimport useStores from 'lib/HookState/useStore';\r\nimport IndexItem from 'components/Petition/IndexItem';\r\nimport usePending from 'lib/HookState/usePending';\r\n\r\nconst StudentCouncil = observer(({ history }) => {\r\n  const { store } = useStores();\r\n\r\n  const { \r\n    getStudentCouncilPetition,\r\n    studentCouncilPetitions,\r\n    studentCouncilPetitionsTotalpage, \r\n    handleStudentCouncilPage\r\n  } = store.petitionStore;\r\n\r\n  let { studentCouncilPetitionsPageIndex } = store.petitionStore;\r\n\r\n  const [petitions, setPetitions] = useState([]);\r\n  const [studentPetitionItemIndex, setStudentPetitionItemIndex] = useState([]);\r\n  const [type, setType] = useState('waiting');\r\n\r\n  const handleType = (typeValue) => {\r\n    setType(typeValue);\r\n  };\r\n\r\n  const handleStudentCouncilPetition = async () => {\r\n    await getStudentCouncilPetition(studentCouncilPetitionsPageIndex, 9, type);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (studentCouncilPetitions) {\r\n      setPetitions(studentCouncilPetitions.map((feed) => <PetitionItem key={feed.idx} item={feed} isStudent={1}/>))\r\n    }\r\n  }, [studentCouncilPetitions]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (studentCouncilPetitionsTotalpage === 1 || !studentCouncilPetitionsTotalpage) {\r\n      setStudentPetitionItemIndex(<IndexItem key={1} index={1}  itemIndex={1} handlePage={handleStudentCouncilPage}/>)\r\n    } else {\r\n      let itemList = [];\r\n      for (let i = 1; i <= studentCouncilPetitionsTotalpage; i ++) {\r\n        itemList.push(<IndexItem key={i} index={i} itemIndex={studentCouncilPetitionsPageIndex} handlePage={handleStudentCouncilPage}/>)\r\n      }\r\n\r\n      if (studentCouncilPetitionsTotalpage < studentCouncilPetitionsPageIndex) {\r\n        itemList = [];\r\n        \r\n        studentCouncilPetitionsPageIndex = 1;\r\n\r\n        for (let i = 1; i <= studentCouncilPetitionsTotalpage; i ++) {\r\n          itemList.push(<IndexItem key={i} index={i} itemIndex={studentCouncilPetitionsPageIndex} handlePage={handleStudentCouncilPage}/>)\r\n        }\r\n      }\r\n\r\n      setStudentPetitionItemIndex(itemList);\r\n    }\r\n  }, [studentCouncilPetitionsTotalpage, studentCouncilPetitionsPageIndex]);\r\n\r\n  const [isLoading, getData] = usePending(handleStudentCouncilPetition);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [studentCouncilPetitionsPageIndex, type]);\r\n\r\n  return (\r\n    <StudentCouncilTemplate\r\n      petitions={petitions}\r\n      handleType={handleType}\r\n      type={type}\r\n      handleType={handleType}\r\n      studentPetitionItemIndex={studentPetitionItemIndex}\r\n    />\r\n  );\r\n});\r\n\r\n// export default inject('store')(observer(withRouter(StudentCouncil)));\r\nexport default withRouter(StudentCouncil);\r\n\r\n","import React from 'react';\r\nimport PageTemplate from 'components/Common/PageTemplate';\r\nimport StudentCouncilContainer from 'containers/StudentCouncil/StudentCouncil';\r\n\r\nconst StudentCouncil = () => {\r\n  return (\r\n    <>\r\n      <PageTemplate url={'/StudentCouncil'}>\r\n        <StudentCouncilContainer/>\r\n      </PageTemplate>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentCouncil;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport style from './Button.scss';\n\nconst cx = classNames.bind(style);\n\nconst Button = ({ handleFunction, appearance, customStyle, type, edgeType, isLoading, loadingType, children }) => {\n  const handleButtonClick = () => {\n    if (isLoading) return;\n    handleFunction();\n  };\n\n  return <>\n    <button type={type} className={cx(`button-${appearance} button-${edgeType}`)} onClick={event => {\n      if (isLoading) event.preventDefault();\n      handleButtonClick();\n    }} style={{ width: customStyle.width, height: customStyle.height, margin: customStyle.margin }}>\n      {\n        isLoading && loadingType !== 'none' ?\n          <div className={cx('button-loadingWrap')}>\n            {\n              loadingType === 'basic' ?\n                <div className={cx('button-loadingWrap-spin')}></div> :\n                <></>\n            }\n            <span className={cx('button-loadingWrap-content', { 'button-loadingWrap-content-textType': loadingType === 'text' })} style={{fontSize: customStyle.fontSize}}>Loading</span>\n          </div> :\n          <div className={cx('button-content')} style={{fontSize: customStyle.fontSize}}>\n            {children}\n          </div>\n      }\n    </button>\n  </>;\n};\n\nButton.propTypes = {\n  /** 버튼이 클릭 되었을 때 실행되는 함수 */\n  handleFunction: PropTypes.func,\n  /** 버튼에 들어갈 내용 */\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string\n  ]).isRequired,\n  /** 버튼 외형 타입 */\n  appearance: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'tertiary',\n    'red',\n    'outline',\n    'outlineSecondary',\n    'outlineTertiary',\n    'outlineRed'\n  ]),\n  /** 버튼의 width, height, 폰트 사이즈를 수정 */\n  customStyle: PropTypes.shape({\n    width: PropTypes.string,\n    height: PropTypes.string,\n    fontSize: PropTypes.string,\n    margin: PropTypes.string\n  }),\n  /** 버튼의 실행 타입 */\n  type: PropTypes.oneOf([\n    'button',\n    'submit',\n    'reset'\n  ]),\n  /** 버튼의 테두리 타입 */\n  edgeType: PropTypes.oneOf([\n    'round',\n    'square'\n  ]),\n  /** 로딩 상태 */\n  isLoading: PropTypes.bool,\n  loadingType: PropTypes.oneOf([\n    'text',\n    'basic',\n    'none'\n  ])\n};\n\nButton.defaultProps = {\n  content: 'Button',\n  appearance: 'primary',\n  customStyle: {\n    width: '',\n    height: '',\n    fontSize: '',\n    margin: '0'\n  },\n  type: 'button',\n  handleFunction: () => {},\n  edgeType: 'round',\n  isLoading: false,\n  loadingType: 'none'\n};\n\nexport default Button;\n","import React from 'react';\nimport classNames from 'classnames/bind';\nimport PropTypes from 'prop-types';\nimport { MdDone, MdError, MdWarning, MdInfoOutline } from 'react-icons/md';\nimport style from './Modal.scss';\nimport { typography } from 'styles/typography/typography_scheme.js';\nimport Button from 'components/Common/Button';\n\nconst { size } = typography;\nconst cx = classNames.bind(style);\n\nconst Modal = ({\n  isModal,\n  title,\n  modalType,\n  confirmText,\n  confirmFunc,\n  closeFunc,\n  width,\n  height,\n  fontSize,\n  children\n}) => {\n  return (\n    <>\n      <div className={cx('Modal-overlay', {'Modal-hidden': !isModal})} />\n      <div className={cx('Modal', {'Modal-hidden': !isModal})} style={{ width, height }}>\n        <div className={cx('Modal-header')}>\n          <MdDone className={cx('Modal-header-success', {'Modal-header-hidden': modalType !== 'success'})} />\n          <MdError className={cx('Modal-header-error', {'Modal-header-hidden': modalType !== 'error'})} />\n          <MdWarning className={cx('Modal-header-warning', {'Modal-header-hidden': modalType !== 'warning'})} />\n          <MdInfoOutline className={cx('Modal-header-info', {'Modal-header-hidden': modalType !== 'info'})} />\n          <span className={cx('Modal-header-title', { 'Modal-fs-title-small': fontSize === 'small' })}>{title}</span>\n        </div>\n        <div className={cx('Modal-contents', { 'Modal-fs-contents-small': fontSize === 'small' })}>\n          { children }\n        </div>\n        <div className={cx('Modal-buttons')}>\n          {\n            modalType !== 'basic' ?\n              <Button customStyle={{ width: '15%', height: '60%', margin: '0 3% 0 0', fontSize: size.s2 }} appearance={'primary'} handleFunction={() => {\n                closeFunc();\n              }}>\n                {'확인'}\n              </Button> :\n              <>\n                <Button customStyle={{ width: '15%', height: '60%', margin: '0 2% 0 0', fontSize: size.s2 }} appearance={'outline'} handleFunction={async () => {\n                  await confirmFunc();\n                  closeFunc();\n                }}>\n                  {confirmText}\n                </Button>\n                <Button customStyle={{ width: '15%', height: '60%', margin: '0 3% 0 0', fontSize: size.s2 }} appearance={'outlineRed'} handleFunction={() => {\n                  closeFunc();\n                }}>\n                  {'취소'}\n                </Button>\n              </>\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n\nModal.propTypes = {\n  isModal: PropTypes.bool.isRequired,\n  title: PropTypes.string,\n  modalType: PropTypes.oneOf([\n    'basic',\n    'success',\n    'error',\n    'info',\n    'warning'\n  ]),\n  confirmText: PropTypes.string,\n  confirmFunc: PropTypes.func,\n  closeFunc: PropTypes.func,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  fontSize: PropTypes.oneOf([\n    'default',\n    'small'\n  ]),\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.node\n  ])\n};\n\nModal.defaultProps = {\n  isModal: false,\n  title: '',\n  modalType: 'basic',\n  confirmText: '확인',\n  confirmFunc: () => {},\n  closeFunc: () => {},\n  width: '450px',\n  height: '200px',\n  fontSize: 'default',\n  children: ''\n};\n\nexport default Modal;\n","// typography\n\nexport const typography = {\n  font: {\n    Noto_Sans_Thin: 'Noto Sans Thin',\n    Noto_Sans_Light: 'Noto Sans Light',\n    Noto_Sans_Regular: 'Noto Sans Regular',\n    Noto_Sans_Medium: 'Noto Sans Medium',\n    Noto_Sans_SemiBold: 'Noto Sans SemiBold',\n    Noto_Sans_Bold: 'Noto Sans Bold',\n    Noto_Sans_Black: 'Noto Sans Black',\n    Noto_Sans_KR_Thin: 'Noto Sans KR Thin',\n    Noto_Sans_KR_Light: 'Noto Sans KR Light',\n    Noto_Sans_KR_DemiLight: 'Noto Sans KR DemiLight',\n    Noto_Sans_KR_Regular: 'Noto Sans KR Regular',\n    Noto_Sans_KR_Medium: 'Noto Sans KR Medium',\n    Noto_Sans_KR_Bold: 'Noto Sans KR Bold',\n    Noto_Sans_KR_Black: 'Noto Sans KR Black'\n  },\n  size: {\n    s1: '12px', // content1\n    s2: '14px', // content2\n    s3: '16px', // content3\n    s4: '18px', // content4\n    s5: '20px', // content5\n    s6: '22px', // content6\n    s7: '24px', // content7\n    navbar: '40px', // navbar\n  }\n};","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport ModalComponent from 'components/Common/Modal';\n\nconst Modal = ({ store }) => {\n  const { isModal, modalTitle, modalType, modalConfirmText, modalContents, confirmFunction, handleIsModal, width, height, fontSize } = store.dialog;\n  return (\n    <>\n      <ModalComponent isModal={isModal} title={modalTitle} modalType={modalType} confirmText={modalConfirmText} confirmFunc={confirmFunction} closeFunc={handleIsModal} width={width} height={height} fontSize={fontSize}>\n        {modalContents}\n      </ModalComponent>\n    </>\n  );\n};\n\nModal.propTypes = {\n  store: PropTypes.any\n};\n\nexport default inject('store')(observer(Modal));\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport * as Pages from '../pages';\r\nimport Modal from 'containers/Common/Modal';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n          <Route\r\n            exact\r\n            path='/dgsw.petition/sign'\r\n            render={() => <Pages.Sign/>}\r\n            />\r\n      </Switch>\r\n      <Switch>\r\n          <Route\r\n            exact\r\n            path='/dgsw.petition'\r\n            render={() => <Pages.Petition/>}\r\n            />\r\n      </Switch>\r\n      <Switch>\r\n          <Route\r\n            exact\r\n            path='/dgsw.petition/petition-write'\r\n            render={() => <Pages.PetitionWrite/>}\r\n            />\r\n      </Switch>\r\n      <Switch>\r\n          <Route\r\n            exact\r\n            path='/dgsw.petition/admin'\r\n            render={() => <Pages.Admin/>}\r\n            />\r\n      </Switch>\r\n      <Switch>\r\n          <Route\r\n            exact\r\n            path='/dgsw.petition/petition-detail'\r\n            render={() => <Pages.PetitionDetail/>}\r\n            />\r\n      </Switch>\r\n      <Switch>\r\n          <Route\r\n            exact\r\n            path='/dgsw.petition/student-council'\r\n            render={() => <Pages.StudentCouncil/>}\r\n            />\r\n      </Switch>\r\n      <Modal />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import axios from 'axios';\r\nimport { SERVER } from 'config/config.json';\r\n\r\nclass signRepository {\r\n  async handelSignIn (request) {\r\n    try {\r\n      const { data } = await axios.post(`${SERVER}/auth/login`, request);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async handelSignUp (request) {\r\n    try {\r\n      const { data } = await axios.post(`${SERVER}/auth/register`, request);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async handelCheckId (request) {\r\n    try {\r\n      const { data } = await axios.post(`${SERVER}/auth/find/id`, request);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new signRepository();\r\n","import { action } from 'mobx';\r\nimport { autobind } from 'core-decorators';\r\nimport signRepository from './signRepository';\r\n\r\n@autobind\r\nclass signStore {\r\n\r\n  @action\r\n  async handleSignIn (request) {\r\n    try {\r\n      const response = await signRepository.handelSignIn(request);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => {\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async handleSignUp (request) {\r\n    try {\r\n      const response = await signRepository.handelSignUp(request);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async handelCheckId (request) {\r\n    try {\r\n      const response = await signRepository.handelCheckId(request);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default signStore;","import { observable, action } from 'mobx';\r\nimport { autobind } from 'core-decorators';\r\n\r\n@autobind\r\nclass dialogStore {\r\n  // Modal Observable\r\n  @observable isModal = false;\r\n  @observable modalTitle = '';\r\n  @observable modalType = 'basic';\r\n  @observable modalConfirmText = '확인';\r\n  @observable modalContents = null;\r\n  @observable width = '450px';\r\n  @observable height = '200px';\r\n  @observable fontSize = 'default';\r\n  @observable confirmFunction = function () {};\r\n  @observable closeFunction = function () {};\r\n\r\n  // Alert Observable\r\n  @observable isAlert = false;\r\n  @observable alertType = 'basic';\r\n  @observable alertContents = '';\r\n\r\n  // Modal Actions\r\n  @action\r\n  handleIsModal () {\r\n    this.isModal = false;\r\n    this.closeFunction();\r\n  }\r\n  \r\n  @action\r\n  handleConfirmModal () {\r\n    this.isModal = false;\r\n    this.confirmFunction();\r\n  }\r\n\r\n  @action\r\n  modal ({ title, stateType, confirmText, contents, confirmFunc, closeFunc, width, height, fontSize }) {\r\n    this.isModal = true;\r\n    this.modalTitle = title;\r\n    this.modalType = stateType;\r\n    this.modalConfirmText = confirmText;\r\n    this.modalContents = contents;\r\n    if (width) this.width = width;\r\n    if (height) this.height = height;\r\n    if (fontSize) this.fontSize = fontSize;\r\n    this.confirmFunction = function () {\r\n      if (confirmFunc) confirmFunc();\r\n    };\r\n    this.closeFunction = function () {\r\n      if (closeFunc) closeFunc();\r\n    };\r\n  }\r\n}\r\n\r\nexport default dialogStore;","import axios from 'axios';\r\nimport TokenVerification from 'lib/Token/TokenVerification';\r\nimport { SERVER } from 'config/config.json';\r\n\r\nclass petitionRepository {\r\n  async getPetitionFeed (page, limit, type) { // 승인 된 청원 조회 요청 함수\r\n    try {\r\n      const { data } = await axios.get(`${SERVER}/petition?page=${page}&limit=${limit}&type=${type}`);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getPetitionFeedByCategory (page, limit, category) {// 전체 청원 조회 요청 함수\r\n    try {\r\n      const { data } = await axios.get(`${SERVER}/petition/category/?page=${page}&limit=${limit}&category=${category}`);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async searchPetition (title, page, limit) {// 검색 청원 조회 요청 함수\r\n    try {\r\n      const { data } = await axios.get(`${SERVER}/petition/search?title=${title}&page=${page}&limit=${limit}`);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async writePetitionComment (request) {// 검색 청원 조회 요청 함수\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n    try {\r\n      const { data } = await axios.post(`${SERVER}/petition/comment`, request, {\r\n        headers: {\r\n          'x-access-token' : token,\r\n        }\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getPetitionDetail (idx) {//  청원 상세 조회 조회 요청 함수\r\n    try {\r\n      const { data } = await axios.get(`${SERVER}/petition/detail?idx=${idx}`);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getPetitionComments (idx) {//  청원 상세 조회 댓글 조회 요청 함수\r\n    try {\r\n      const { data } = await axios.get(`${SERVER}/petition/comment?petitionIdx=${idx}`);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deletePetition (idx) {//  청원 삭제 요청 함수\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n\r\n    try {\r\n      const { data } = await axios.delete(`${SERVER}/petition?idx=${idx}`, {\r\n        headers: {\r\n          'x-access-token' : token,\r\n        }\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async allowPetition (request) {//  청원 승인 요청 함수\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n\r\n    try {\r\n      const { data } = await axios.post(`${SERVER}/petition/allow`, request, {\r\n        headers: {\r\n          'x-access-token' : token,\r\n        }\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getStudentCouncilPetition (page, limit, type) {//  학생회 전용 청원 조회 요청 함수\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n\r\n    try {\r\n      const { data } = await axios.get(`${SERVER}/petition/get_student_council?page=${page}&limit=${limit}&type=${type}`, {\r\n        headers: {\r\n          'x-access-token' : token,\r\n        }\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async blindPetition (request) {//  청원 블라인드 요청 함수\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n\r\n    try {\r\n      const { data } = await axios.post(`${SERVER}/petition/blind`, request, {\r\n        headers: {\r\n          'x-access-token' : token,\r\n        }\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async writePetition (request) { // 청원 작성 요청 함수\r\n    // 토큰 가져오기\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n\r\n    try {\r\n      const { data } = await axios.post(`${SERVER}/petition/`, request, {\r\n        headers: {\r\n          'x-access-token' : token,\r\n        },\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new petitionRepository();\r\n","import { useState } from 'react';\r\nimport { action, observable } from 'mobx';\r\nimport { autobind } from 'core-decorators';\r\nimport petitionRepository from './petitionRepository';\r\n\r\n@autobind\r\nclass petitionStore {\r\n  @observable categoryPetitions = []; // 전체 청원 목록\r\n  @observable categoryPetitionPageIndex = 1; // 전체 청원 페이지 index\r\n  @observable categoryPetitionTotalPage = 1; // 전체 청원 페이지 개수\r\n  @observable allowedPetitions = []; // 승인된 청원 목록\r\n  @observable allowedPetitionTotalPage = 1; // 승인된 청원 페이지 개수\r\n  @observable allowedPetitionPageIndex = 1; // 승인된 청원 페이지 index\r\n\r\n  @observable studentCouncilPetitions = []; // 학생회 전용 청원 페이지 목록\r\n  @observable studentCouncilPetitionsTotalpage = 1;\r\n  @observable studentCouncilPetitionsPageIndex = 1;\r\n\r\n  @observable petitionComment = []; // 청원 댓글\r\n\r\n  @observable PetitionDetailData = {}; // 청원 상세 조회 변수\r\n\r\n  @action\r\n  handleAllowedPage(pageIndex) { // item index 리스트 설정 handleStudentCouncilPage\r\n    this.allowedPetitionPageIndex = pageIndex;\r\n  }\r\n\r\n  @action\r\n  handleStudentCouncilPage(pageIndex) { // item index 리스트 설정\r\n    this.studentCouncilPetitionsPageIndex = pageIndex;\r\n  }\r\n\r\n  @action\r\n  handleAllPage(pageIndex) { // item index 리스트 설정\r\n    this.categoryPetitionPageIndex = pageIndex;\r\n  }\r\n\r\n  @action\r\n  async getPetitionFeed (page, limit, type) { // 승인된 청원 목록을 Repository 함수를 통해 저장\r\n    try {\r\n      const response = await petitionRepository.getPetitionFeed(page, limit, type);\r\n      \r\n      this.allowedPetitions = response.data.petition; // 받아온 데이터를 observable 변수에 저장\r\n      this.allowedPetitionTotalPage = response.data.totalPage; // 받아온 데이터를 observable 변수에 저장\r\n\r\n      return new Promise((resolve, reject) => {// resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => {// 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getPetitionFeedByCategory (page, limit, category) { // 전체 청원 목록을 Repository 함수를 통해 저장\r\n    try {\r\n      const response = await petitionRepository.getPetitionFeedByCategory(page, limit, category);\r\n\r\n      this.categoryPetitions = response.data.petition; // 받아온 데이터를 observable 변수에 저장\r\n      this.categoryPetitionTotalPage = response.data.totalPage; // 받아온 데이터를 observable 변수에 저장\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async searchPetition (title, page, limit) { // 검색 청원 목록을 Repository 함수를 통해 저장\r\n    try {\r\n      const response = await petitionRepository.searchPetition(title, page, limit);\r\n\r\n      this.allowedPetitions = response.data.petition; // 받아온 데이터를 observable 변수에 저장\r\n      this.allowedPetitionTotalPage = response.data.totalPage; // 받아온 데이터를 observable 변수에 저장\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async searchCategoryPetition (title, page, limit) { // 검색 청원 목록을 Repository 함수를 통해 저장\r\n    try {\r\n      const response = await petitionRepository.searchPetition(title, page, limit);\r\n\r\n      this.categoryPetitions = response.data.petition; // 받아온 데이터를 observable 변수에 저장\r\n      this.categoryPetitionTotalPage = response.data.totalPage; // 받아온 데이터를 observable 변수에 저장\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getPetitionDetail (idx) { //  청원 상세조회 후  Repository 함수를 통해 저장\r\n    try {\r\n      const response = await petitionRepository.getPetitionDetail(idx);\r\n\r\n      this.PetitionDetailData = response.data.petition;\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  \r\n  @action\r\n  async deletePetition (idx) { //  청원 상세조회 후  Repository 함수를 통해 저장\r\n    try {\r\n      const response = await petitionRepository.deletePetition(idx);\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async blindPetition (request) { //  청원 상세조회 후  Repository 함수를 통해 저장\r\n    try {\r\n      const response = await petitionRepository.blindPetition(request);\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async allowPetition (request) { //  청원 상세조회 후  Repository 함수를 통해 저장\r\n    try {\r\n      const response = await petitionRepository.allowPetition(request);\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getStudentCouncilPetition (page, limit, type) { //  청원 상세조회 후  Repository 함수를 통해 저장\r\n    try {\r\n      const response = await petitionRepository.getStudentCouncilPetition(page, limit, type);\r\n\r\n      this.studentCouncilPetitions = response.data.petition;\r\n      this.studentCouncilPetitionsTotalpage = response.data.totalPage;\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async writePetition (request) { // 청원 작성\r\n    try {\r\n      const response = await petitionRepository.writePetition(request);\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async writePetitionComment (request) { // 청원 댓글 작성\r\n    try {\r\n      const response = await petitionRepository.writePetitionComment(request);\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getPetitionComments (idx) { // 청원 댓글 조회\r\n    try {\r\n      const response = await petitionRepository.getPetitionComments(idx);\r\n\r\n      this.petitionComment = response.data.comment;\r\n\r\n      return new Promise((resolve, reject) => { // resonse 비동기 처리\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => { // 에러 catch\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default petitionStore;","import axios from 'axios';\r\nimport TokenVerification from 'lib/Token/TokenVerification';\r\nimport { SERVER } from 'config/config.json';\r\n\r\nclass AdminRepository {\r\n  async authorizationStudent (request) { // 학생회 권한 부여 함수\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n    try {\r\n      const { data } = await axios.post(`${SERVER}/auth/grant`, request, {\r\n        headers: {\r\n          'x-access-token' : token\r\n        }\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deleteAuth (request) { // 학생회 권한 부여 함수\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n    try {\r\n      const { data } = await axios.post(`${SERVER}/auth/delete_auth`, request, {\r\n        headers: {\r\n          'x-access-token' : token\r\n        }\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async searchMember (searchWord) { // 학생회 검색\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n    try {\r\n      const { data } = await axios.get(`${SERVER}/member/search?searchWord=${searchWord}`, {\r\n        headers: {\r\n          'x-access-token' : token\r\n        }\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async deletePetition (idx) { //  청원 삭제\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n    try {\r\n      const { data } = await axios.delete(`${SERVER}/petition?idx=${idx}`, {\r\n        headers: {\r\n          'x-access-token' : token\r\n        }\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getOrderMember () { // 관리자용 멤버 조회 함수\r\n    const token = TokenVerification() === 'localT' ? localStorage.getItem('petition-token') : sessionStorage.getItem('petition-token'); \r\n    try {\r\n      const { data } = await axios.get(`${SERVER}/member/admin`, {\r\n        headers: {\r\n          'x-access-token' : token\r\n        }\r\n      });\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AdminRepository();","import { action, observable } from 'mobx';\r\nimport { autobind } from 'core-decorators';\r\nimport AdminRepository from './AdminRepository';\r\n\r\n@autobind\r\nclass AdminStore {\r\n\r\n  @observable memberData = [];\r\n\r\n  @action\r\n  async authorizationStudent (request) {\r\n    try {\r\n      const response = await AdminRepository.authorizationStudent(request);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => {\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async deleteAuth (request) {\r\n    try {\r\n      const response = await AdminRepository.deleteAuth(request);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => {\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async deletePeition (idx) {\r\n    try {\r\n      const response = await AdminRepository.deletePetition(idx);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => {\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async searchMember (searchWord) {\r\n    try {\r\n      const response = await AdminRepository.searchMember(searchWord);      \r\n      \r\n      this.memberData = response.data.member;\r\n\r\n      return new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => {\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  @action\r\n  async getOrderMember () {\r\n    try {\r\n      const response = await AdminRepository.getOrderMember();\r\n\r\n      this.memberData = response.data.member;\r\n\r\n      return new Promise((resolve, reject) => {\r\n        resolve(response);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n      return new Promise((resolve, reject) => {\r\n        reject(error);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default AdminStore;","import signStore from './sign';\r\nimport dialogStore from './dialog';\r\nimport petitionStore from './petition';\r\nimport adminStore from './admin';\r\n\r\nconst stores = {\r\n  sign: new signStore(),\r\n  dialog: new dialogStore(),\r\n  petitionStore: new petitionStore(),\r\n  adminStore: new adminStore()\r\n};\r\n\r\nexport default stores;","import React from 'react';\r\nimport { Provider } from 'mobx-react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from 'components/App';\r\nimport stores from 'stores';\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Provider store={ stores }> \r\n      <BrowserRouter>\r\n        <App/>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './Root';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/dgsw_logo.ccd810f9.png\";","module.exports = __webpack_public_path__ + \"static/media/backgroundImage2.9ac8a3cc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/schoolImage.105dcb1e.jpg\";"],"sourceRoot":""}